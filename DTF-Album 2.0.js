// ==UserScript==
// @name        DTF-Album 2.0
// @namespace   https://github.com/TentacleTenticals
// @match       https://dtf.ru/*
// @grant       none
// @version     1.0
// @author      Tentacle Tenticals
// @description –ó–∞–º–µ–Ω—è–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∞–ª—å–±–æ–º—ã –Ω–∞ –∏–Ω—É—é –∏—Ö –≤–µ—Ä—Å–∏—é. –†–∞–±–æ—Ç–∞–µ—Ç –≤ –¥–≤—É—Ö —Ä–µ–∂–∏–º–∞—Ö - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–º, –∏ —Ä—É—á–Ω–æ–º (–ø–æ –Ω–∞–∂–∞—Ç–∏—é –∫–Ω–æ–ø–∫–∏).
// @homepage https://github.com/TentacleTenticals/DTF-showAvatar
// @license MIT
// ==/UserScript==
/* jshint esversion:6 */

(function() {
  'use strict';
  
  {
    const log = console.log.bind(console)
    console.log = (...args) => {
      if(Array.isArray(args)){
        if(args[0]){
          if(typeof args[0] === 'string'){
            if(args[0].match(/\[ Air \] Ready.*/)){
              log('Yes!!!');
              run();
            }
          }
        }
        // if(args[0].match(/\[ Air \] Ready.*/)){
        //   log('Yes!!!');
        //   run();
        // }
      }
      log(...args)
    }
  }
  // let currentUrl = document.location.href;
  // const config = { attributes: true, childList: true, subtree: true };
  // const callback = function(mutationsList, observer) {
  //     for(const mutation of mutationsList) {
  //         if(!mutation.target.baseURI.match(currentUrl)){
  //             console.log('Url changed!', currentUrl, mutation.target.baseURI)
  //             currentUrl = mutation.target.baseURI;
  //             run();
  //         }
  //     }
  // };
  // const observer = new MutationObserver(callback);
  // observer.observe(document.body, config);
  
  let focused,
    imagePreviewer,
    button1Pressed,
    filter = /(.+)\//,
    dtfFilter = /(https:\/\/[^/]+\/[^/]+.+)\?ref.+/,
    layout = document.querySelector(`div[class='site-header-container']`),
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–∏—Å–∫–æ–≤–∏–∫–æ–≤ –¥–ª—è –º–µ–Ω—é –ø–æ–∏—Å–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.
      // url: - —Å—Å—ã–ª–∫–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã –ø–æ–∏—Å–∫–∞.
      // name: –∏–º—è –ø–æ–∏—Å–∫–∞ –≤ –º–µ–Ω—é –ø–æ–∏—Å–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.
      // use: true/false (–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å/–Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–æ–∏—Å–∫–æ–≤–∏–∫).
    searches = [
      {url:'http://saucenao.com/search.php?db=999&url=', name:'Saucenao', use:true},
      {url:'https://www.bing.com/images/search?view=detailv2&iss=sbi&FORM=SBIHMP&sbisrc=UrlPaste&q=imgurl:', name:'Bing', use:true},
      {url:'https://www.google.com/searchbyimage?site=search&image_url=', name:'Google', use:true},
      {url:'https://yandex.ru/images/search?rdrnd=296405&rpt=imageview&url=', name:'Yandex', use:true},
      {url:'http://tineye.com/search/?url=', name:'TinEye', use:true},
      {url:'http://iqdb.org/?url=', name:'IQDB', use:true}
    ],
    mode = {// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–µ–∂–∏–º–æ–≤ —Ä–∞–±–æ—Ç—ã —Å–∫—Ä–∏–ø—Ç–∞. true/false.
      
      // main: - –û—Å–Ω–æ–≤–Ω–æ–π —Ä–µ–∂–∏–º.
      // auto:true - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–∂–∏–º. –°–∫—Ä–∏–ø—Ç –Ω–∞—Ö–æ–¥–∏—Ç –≤ —Å—Ç–∞—Ç—å–µ –∞–ª—å–±–æ–º—ã, –∏ —Å–∞–º –∑–∞–º–µ–Ω—è–µ—Ç –∏—Ö.
      // auto:false - –†—É—á–Ω–æ–π —Ä–µ–∂–∏–º. –°–∫—Ä–∏–ø—Ç –Ω–∞—Ö–æ–¥–∏—Ç –≤ —Å—Ç–∞—Ç—å–µ –∞–ª—å–±–æ–º—ã, –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –ø–µ—Ä–µ–¥ –Ω–∏–º–∏ –∫–Ω–æ–ø–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –Ω–∏—Ö –∑–∞–º–µ–Ω—è—é—Ç –∞–ª—å–±–æ–º –ø–æ–¥ –Ω–∏–º–∏.
      // button: true/false - –°–æ–∑–¥–∞–≤–∞—Ç—å-–ª–∏ –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è –∞–ª—å–±–æ–º–æ–≤. –†–∞–±–æ—Ç–∞–µ—Ç –ª–∏—à—å –¥–ª—è –ê–í–¢–û —Ä–µ–∂–∏–º–∞, —Ç.–∫ —Ä—É—á–Ω–æ–π –∏ —Ç–∞–∫ —Å–æ–∑–¥–∞—ë—Ç —ç—Ç–∏ –∫–Ω–æ–ø–∫–∏.
      // howMany: —á–∏—Å–ª–æ - –ù–∞ —Å–∫–æ–ª—å–∫–æ –∏–º–µ–Ω–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –∞–ª—å–±–æ–º–µ —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å. –†–∞–±–æ—Ç–∞–µ—Ç –¥–ª—è –û–ë–û–ò–• —Ä–µ–∂–∏–º–æ–≤.
      main:{active:true, auto:false, button:true, howMany:2},
      
      // –°–æ–≤–º–µ—â–µ–Ω–∏–µ –í–°–ï–• —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –∞–ª—å–±–æ–º–æ–≤ –≤ —Å—Ç–∞—Ç—å–µ –≤ –æ–¥–∏–Ω –ê–ª—å–±–æ–º 2.0.
      // active:true - –ü–æ—è–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Å–æ–≤–º–µ—â–µ–Ω–∏—è –∞–ª—å–±–æ–º–æ–≤.
      // active:false - –ö–Ω–æ–∫–∞ –Ω–µ –ø–æ—è–≤–∏—Ç—Å—è, —Å–æ–≤–º–µ—â–µ–Ω–∏—è –Ω–µ –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç.
      // –ï—Å–ª–∏ –≤ –û–°–ù–û–í–ù–û–ú —Ä–µ–∂–∏–º–µ (main) –≤—ã–±—Ä–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–∂–∏–º, —Ç–æ –∫–Ω–æ–ø–∫–∞ —Å–æ–≤–º–µ—â–µ–Ω–∏—è –∞–ª—å–±–æ–º–æ–≤ –ù–ï –ø–æ—è–≤–∏—Ç—Å—è.
      merge:{active:true},
      
      // –°–±–æ—Ä –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ (–Ω–∞–±–æ—Ä–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –í–ù–ï —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –∞–ª—å–±–æ–º–æ–≤) –≤ –æ–¥–∏–Ω –ê–ª—å–±–æ–º 2.0.
      // active:true - –ü–æ—è–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Å–±–æ—Ä–∫–∞ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ –≤ –∞–ª—å–±–æ–º.
      // active:false - –ö–Ω–æ–∫–∞ –Ω–µ –ø–æ—è–≤–∏—Ç—Å—è, —Å–±–æ—Ä–∫–∏ –Ω–µ –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç.
      // howMany: - –ù–∞ —Å–∫–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –ø–æ–¥–±–æ—Ä–∫–µ —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–æ–ø–∫–∏. –î–ï–§–û–õ–¢: '2'.
      compilation:{active:true, howMany:2},
      
      // –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã –∑—É–º–∞. true/false (–≤—ã–∫–ª/–≤—ã–∫–ª).
      // –ü—Ä–∏ –∑—É–º–µ, —Å–∫—Ä–æ–ª–ª–±–∞—Ä —Å—Ç–∞—Ä–∞–µ—Ç—Å—è –¥–µ—Ä–∂–∞—Ç—å—Å—è –±–ª–∏–∑ –∫—É—Ä—Å–æ—Ä–∞ –º—ã—à–∏. –î–ï–§–û–õ–¢: false.
      smartZoom: false,
      
      // –ö–Ω–æ–ø–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –†–ï–ñ–ò–ú–ê –ó–£–ú–ê –ø—Ä–∏ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è. –ó—É–º —Ä–∞–±–æ—Ç–∞–µ—Ç –ª–∏—à—å —Å –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º —Å–∫—Ä–æ–ª–ª–æ–º –∫–æ–ª—ë—Å–∏–∫–æ–º –º—ã—à–∏ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏.
      // –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–∫–∏ Control/Alt/Shift –∏ —Ç.–ø. –ö–ª–∞–≤–∏—à–∏ –±—É–∫–≤, —Ü–∏—Ñ—Ä –∏ —Å–∏–º–≤–æ–ª–æ–≤ –ª—É—á—à–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å.
      button1: 'Control',
      
      // –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –º–µ–∂–¥—É –≤—ã–±—Ä–∞–Ω–Ω—ã–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ (–≤ –†–ï–ñ–ò–ú–ï –ü–†–û–°–ú–û–¢–†–ê). –î–ï–§–û–õ–¢: ArrowLeft/ArrowRight.
      buttonPrev: 'ArrowLeft',
      buttonNext: 'ArrowRight',
      // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –ü–†–û–°–ú–û–¢–†–ê. –î–µ—Ñ–æ–ª—Ç: Escape.
      buttonEsc: 'Escape'
    },
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–µ–∫—Å—Ç–∞ –∫–Ω–æ–ø–æ–∫.
    buttonsText = {
      copyLink: 'üîó', // –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Å—ã–ª–∫–∏ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞. –î–ï–§–û–õ–¢: 'üîó'. üìã
      saveImage: 'üíæ', // –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è (—Å–∫–∞—á–∏–≤–∞–Ω–∏—è) –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è. –î–ï–§–û–õ–¢: 'üíæ'. üì• üíΩ üíø üìÄ
      searchImage: 'süîé', // –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –æ—Ç–∫—Ä—ã—Ç–∏—è –º–µ–Ω—é –ø–æ–∏—Å–∫–∞ –ø–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º. –î–ï–§–û–õ–¢: 'süîé'. üî¨ üì° üó∫Ô∏è ‚ÑπÔ∏è üñºÔ∏è üîç
      turnOffZoom: '-üîç', // –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –†–ï–ñ–ò–ú–ê –ó–£–ú–ê (–≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –°–¢–ê–ù–î–ê–†–¢–ù–´–ô –†–ï–ñ–ò–ú) –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞. –î–ï–§–û–õ–¢: '-üîç'.
      previous: 'üîô', // –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏–π –∏—Ç–µ–º. –î–ï–§–û–õ–¢: 'üîô'. ‚¨ÖÔ∏è
      next: 'üîú', // –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –∏—Ç–µ–º. –î–ï–§–û–õ–¢: 'üîú'. ‚û°Ô∏è
      close: '‚úñÔ∏è', // –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –∑–∞–∫—Ä—ã—Ç–∏—è –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏—Ç–µ–º–∞. –î–ï–§–û–õ–¢: '‚úñÔ∏è'. üö™ ‚ùå ‚ùé
      
      // –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –∑–∞–º–µ–Ω—ã —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ DTF –∞–ª—å–±–æ–º–∞ –Ω–∞ DTF-–ê–ª—å–±–æ–º 2.0. –î–ï–§–û–õ–¢: `–ó–∞–º–µ–Ω–∏—Ç—å –∞–ª—å–±–æ–º –Ω–∞ '–ê–ª—å–±–æ–º 2.0'` / `–í–µ—Ä–Ω—É—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –∞–ª—å–±–æ–º`.
      createAlbum:{
        default:`–ó–∞–º–µ–Ω–∏—Ç—å –∞–ª—å–±–æ–º –Ω–∞ '–ê–ª—å–±–æ–º 2.0'`,
        pressed:`–í–µ—Ä–Ω—É—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –∞–ª—å–±–æ–º`
      },
      // –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –∑–∞–º–µ–Ω—ã –≤—Å–µ—Ö –∞–ª—å–±–æ–º–æ–≤ –Ω–∞ –æ–¥–∏–Ω –ê–ª—å–±–æ–º 2.0.
      createAlbumMerge:{
        default:`–ó–∞–º–µ–Ω–∏—Ç—å –≤—Å–µ –∞–ª—å–±–æ–º—ã –Ω–∞ –æ–¥–∏–Ω '–ê–ª—å–±–æ–º 2.0'`,
        pressed:`–í–µ—Ä–Ω—É—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∞–ª—å–±–æ–º—ã`
      },
      // –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –∑–∞–º–µ–Ω—ã –ø–æ–¥–±–æ—Ä–∫–∏ –Ω–∞ –ê–ª—å–±–æ–º 2.0. –î–ï–§–û–õ–¢: `–ó–∞–º–µ–Ω–∏—Ç—å –ø–æ–¥–±–æ—Ä–∫—É –Ω–∞ '–ê–ª—å–±–æ–º 2.0'` / `–í–µ—Ä–Ω—É—Ç—å –ø–æ–¥–æ–±—Ä–∫—É`.
      createAlbumCompilation:{
        default:`–ó–∞–º–µ–Ω–∏—Ç—å –ø–æ–¥–±–æ—Ä–∫—É –Ω–∞ '–ê–ª—å–±–æ–º 2.0'`,
        pressed:`–í–µ—Ä–Ω—É—Ç—å –ø–æ–¥–±–æ—Ä–∫—É`
      },
    },
    
    imagePreviewerElements = {
      // –¢–µ–∫—Å—Ç-–æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –∞–ª—å–±–æ–º–µ. –î–ï–§–û–õ–¢: 'üñºÔ∏è: ' (üñºÔ∏è: "–∑–Ω–∞—á–µ–Ω–∏–µ" / "–∑–Ω–∞—á–µ–Ω–∏–µ").
      images:{
        text: 'üñºÔ∏è: ',
        spacer: ' / '
      },
      // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏.
      info:{
        text: '',
        spacer: ' x ',
        px: ' px'
      },
      zoomLevel: '–£—Ä.–∑—É–º–∞: ', // –¢–µ–∫—Å—Ç-–æ–ø–∏—Å–∞–Ω–∏–µ –∑—É–º–∞. –î–ï–§–û–õ–¢: '–£—Ä.–∑—É–º–∞: '. (–£—Ä.–∑—É–º–∞: '–∑–Ω–∞—á–µ–Ω–∏–µ').
      linksList: 'üîó', // –¢–µ–∫—Å—Ç-Title —Å–ø–∏—Å–∫–∞ —Å—Å—ã–ª–æ–∫ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ. –î–ï–§–û–õ–¢: 'üîó'.
      title: 'üìù: ', // –¢–µ–∫—Å—Ç-Title –æ–ø–∏—Å–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è. –î–ï–§–û–õ–¢: 'üìù: '. üìì üìù üìõ
    },
    
    alertTextUrlCopied = 'üìã –°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞', // –¢–µ–∫—Å—Ç –æ–ø–æ–≤–µ—â–µ–Ω–∏—è –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞. –î–ï–§–û–õ–¢: '–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞'.

    main = {
      albums:{
        overscroll: 'auto' // –í–ê–ñ–ù–´–ô –ü–ê–†–ê–ú–ï–¢–†! –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —á—Ç–æ –¥–µ–ª–∞—Ç—å, –µ—Å–ª–∏ –í—ã –ø—Ä–æ–ª–∏—Å—Ç–∞–ª–∏ –≤–µ—Å—å –∞–ª—å–±–æ–º, —Ç.–µ —Å–∫—Ä–æ–ª–ª –∞–ª—å–±–æ–º–∞ –¥–∞–ª—å—à–µ –Ω–µ –ø–æ–π–¥—ë—Ç.
      },
      // contain (—Å–∫—Ä–æ–ª–ª –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ –Ω–∞ –∞–ª—å–±–æ–º, –∏–¥—ë—Ç –ª–∏—à—å –≤–Ω—É—Ç—Ä–∏ –∞–ª—å–±–æ–º–∞).
      // auto (—Å–∫—Ä–æ–ª–ª –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ –Ω–∞ –∞–ª—å–±–æ–º, –∏–¥—ë—Ç –≤–Ω—É—Ç—Ä–∏ –∞–ª—å–±–æ–º–∞, –ø–æ–∫–∞ –æ–Ω –Ω–µ –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è, –∏ –¥–∞–ª–µ–µ –∏–¥—ë—Ç –ø–æ —Å–∞–º–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ).
      // –î–ï–§–û–õ–¢: 'auto'.
      alert:{
        size:{
          width: 'unset',
          height: 'unset'
        },
        background: 'rgba(159, 219, 159, 0.8)',
        color: 'black',
        fontSize: '12px',
        fontWeight: '500',
        lineHeight: '12px',
        border: 'unset',
        borderRadius: '3px',
        padding: '3px',
        zIndex: '1000'
      }
    },
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–∏–¥–∞ –∏—Ç–µ–º–æ–≤ –≤ –∞–ª—å–±–æ–º–µ.
    albumItems = {
      itemsInColumn: '4', // –°–∫–æ–ª—å–∫–æ –∏—Ç–µ–º–æ–≤ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤ —Å—Ç—Ä–æ–∫–µ. –í—ã–±–∏—Ä–∞–π—Ç–µ 1-4 –µ—Å–ª–∏ –Ω–µ —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å –º–µ–Ω—è—Ç—å —Ä–∞–∑–º–µ—Ä –∏—Ç–µ–º–æ–≤, –∏–Ω–∞—á–µ –ø–æ—è–≤–∏—Ç—Å—è –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π —Å–∫—Ä–æ–ª–ª. –î–ï–§–û–õ–¢: 3.
      size:{ // –†–∞–∑–º–µ—Ä –∏—Ç–µ–º–∞. –í –∏–¥–µ–∞–ª–µ, –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∫–≤–∞–¥—Ä–∞—Ç. –î–ï–§–û–õ–¢: 169px x 169px
        width: '169px',
        height: '169px'
      },
      rowsTemplate: '169px', // –í—ã—Å–æ—Ç–∞ —Å—Ç—Ä–æ–∫–∏ –∏—Ç–µ–º–æ–≤. –í –∏–¥–µ–∞–ª–µ, –¥–æ–ª–∂–Ω–∞ —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å –≤—ã—Å–æ—Ç–æ–π –∏—Ç–µ–º–∞ (—Ä–∞–∑–º–µ—Ä–æ–º).
      // –¢.–µ, –∏—Ç–µ–º 169px x 169px –∏–º–µ–µ—Ç rowsTemplate 169px.
      gap: '9px', // –û—Ç—Å—Ç—É–ø –º–µ–∂–¥—É –∏—Ç–µ–º–∞–º–∏. –î–ï–§–û–õ–¢: 9px
      padding: '4px 0px 0px 0px', // –û—Ç—Å—Ç—É–ø –º–µ–∂–¥—É –∞–ª—å–±–æ–º–æ–º –∏ "—Å–µ—Ç–∫–æ–π –∏—Ç–µ–º–æ–≤" (–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π) –≤–Ω—É—Ç—Ä–∏ –Ω–µ–≥–æ.
      borderRadius: '3px', // –û–∫—Ä—É–≥–ª–µ–Ω–∏–µ —É–≥–ª–æ–≤ –∏—Ç–µ–º–∞. –î–ï–§–û–õ–¢: 3px
      background: 'rgb(0, 0, 0)', // –§–æ–Ω –∏—Ç–µ–º–∞. –ù—É–∂–Ω–æ, –∫–æ–≥–¥–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–¥—ë—Ç –Ω–µ –≤–æ –≤–µ—Å—å —Ä–∞–∑–º–µ—Ä –∏—Ç–µ–º–∞, –∏–ª–∏ –Ω–µ –∏–º–µ–µ—Ç —Ñ–æ–Ω–∞. –î–µ—Ñ–æ–ª—Ç: rgb(0,0,0)
      boxShadow: '0px 0px 2px 1px rgb(46 207 229 / 20%), 0px 0px 2px 1px rgb(0 0 0)', // –¢–µ–Ω—å –∏—Ç–µ–º–∞. –î–ï–§–û–õ–¢: '0px 0px 2px 1px rgb(46 207 229 / 20%), 0px 0px 2px 1px rgb(0 0 0)'
      hover:{// –í–∏–¥ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ –Ω–∞ —ç–ª–µ–º–µ–Ω—Ç.
        boxShadow: '0px 0px 2px 1px rgb(46 207 229 / 20%), 0px 0px 2px 1px rgb(0 0 0)', // –•–æ–≤–µ—Ä –∏—Ç–µ–º–∞. –¢—É—Ç –¥–≤–µ —Ç–µ–Ω–∏ –ø–æ-–¥–µ—Ñ–æ–ª—Ç—É.
        cursor: 'pointer', // –í–∏–¥ –∫—É—Ä—Å–æ—Ä–∞ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ –Ω–∞ –∏—Ç–µ–º. –î–ï–§–û–õ–¢: pointer.
        filter: 'drop-shadow(0px 0px 1px black)'
      },
      image:{// –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –∏—Ç–µ–º–µ.
        size:{ // –†–∞–∑–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è. –õ—É—á—à–µ, –µ—Å–ª–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –±—É–¥–µ—Ç –±–æ–ª—å—à–µ, —á–µ–º —Ä–∞–∑–º–µ—Ä —Å–∞–º–æ–≥–æ –∏—Ç–µ–º–∞, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã—Ö —á—ë—Ä–Ω—ã—Ö –ø–æ–ª–æ—Å–æ–∫.
          // –≠–∫—Å–ø–µ—Ä–µ–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ —Å —Ä–∞–∑–º–µ—Ä–æ–º, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –Ω–∞–∏–ª—É—á—à–∏–π –¥–ª—è –í–∞—Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
          maxWidth: '300px',
          maxHeight: '300px'
        },
        margin: '-25px 0px 0px 0px' // –ò–∑-–∑–∞ –∫–Ω–æ–ø–æ–∫ –≤ –∏—Ç–µ–º–µ, –Ω—É–∂–Ω–∞ –Ω–µ–±–æ–ª—å—à–∞—è –ø—Ä–∞–≤–∫–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞–∑–∞–¥ –Ω–∞ –º–µ—Å—Ç–æ.
        // –î–µ—Ñ–æ–ª—Ç: -25px 0px 0px 0px ( -25px —ç—Ç–æ –≤—ã—Å–æ—Ç–∞ –∫–Ω–æ–ø–∫–∏ (22px) + –Ω–µ–±–æ–ª—å—à–æ–π –æ—Ç—Å—Ç—É–ø (5px)).
        // –ü—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –≤—ã—Å–æ—Ç—ã –∫–Ω–æ–ø–æ–∫ –∏—Ç–µ–º–∞ (buttonCopyLink (–∫–Ω–æ–ø–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Å—ã–ª–∫–∏ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞) –∏ —Ç.–ø), –µ–≥–æ –æ—Ç—Å—Ç—É–ø–æ–≤, —Ä–∞–∑–º–µ—Ä–∞ —à—Ä–∏—Ñ—Ç–∞ –∏ —Ç.–ø, –≤—Å–µ–≥–¥–∞ –º–µ–Ω—è–π—Ç–µ —ç—Ç–æ—Ç margin.
      },
      buttonContainer:{// –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å –∫–Ω–æ–ø–∫–∞–º–∏ –∏—Ç–µ–º–æ–≤.
        size:{// –†–∞–∑–º–µ—Ä –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞. –í–∞–∂–µ–Ω, —Ç.–∫. –Ω–∞–≤–µ–¥–µ–Ω–∏–µ –Ω–∞ –Ω–µ–≥–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–Ω–æ–ø–∫–∏ –∏—Ç–µ–º–æ–≤.
          // –ü—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –≤—ã—Å–æ—Ç—ã –∫–Ω–æ–ø–æ–∫, –Ω—É–∂–Ω–æ –º–µ–Ω—è—Ç—å –∏ —Ä–∞–∑–º–µ—Ä –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞.
          width: '100%',
          height: '22px'
        },
        // –ö–Ω–æ–ø–∫–∏ –∏—Ç–µ–º–æ–≤.
        buttonCopyLink:{// –ö–Ω–æ–ø–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Å—ã–ª–∫–∏ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞.
          size:{// –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –∫–Ω–æ–ø–∫–∏. –î–ï–§–û–õ–¢: 20px
            minHeight: '20px',
            maxHeight: '22px'
          },
          background: 'rgb(0 0 0)', // –§–æ–Ω –∫–Ω–æ–ø–∫–∏.
          color: 'white', // –¶–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞ –∫–Ω–æ–ø–∫–∏.
          border: 'unset', // –ë–æ—Ä–¥–µ—Ä –∫–Ω–æ–ø–∫–∏.
          boxShadow: '0px 1px 0px 1px rgb(86 136 163)',
          borderRadius: '0px 0px 3px 0px', // –ó–∞–∫—Ä—É–≥–ª–µ–Ω–∏–µ —É–≥–ª–æ–≤ –∫–Ω–æ–ø–∫–∏.
          float: 'left', // "–ü–ª–∞–≤–∞–Ω–∏–µ" –∫–Ω–æ–ø–∫–∏. –î–ï–§–û–õ–¢: 'left' (–Ω–∞–ª–µ–≤–æ). –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: left/right.
          fontSize: '14px', // –†–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞.
          lineHeight: '14px', // –í—ã—Å–æ—Ç–∞ —Å—Ç—Ä–æ–∫–∏. –í –∏–¥–µ–∞–ª–µ, —Ä–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞ –∏ –≤—ã—Å–æ—Ç–∞ —Å—Ç—Ä–æ–∫–∏ –¥–æ–ª–∂–Ω—ã —Å–æ–≤–ø–∞–¥–∞—Ç—å.
          margin: '0px 5px 0px 1px', // –í–Ω–µ—à–Ω–∏–π –æ—Ç—Å—Ç—É–ø –∫–Ω–æ–ø–∫–∏ —Å–ø—Ä–∞–≤–∞. –î–ï–§–û–õ–¢: '0px 3px 0px 0px'. –¢.–µ, '–í–Ω–∏–∑ –ù–∞–ø—Ä–∞–≤–æ –í–≤–µ—Ä—Ö –ù–∞–ª–µ–≤–æ'.
          padding: '3px', // –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –æ—Ç—Å—Ç—É–ø –∫–Ω–æ–ø–∫–∏.
          hover:{// –í–∏–¥ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É.
            background: 'rgb(75 75 75)',
            color: 'rgb(212 255 251)'
          }
        },
        buttonImgDownload:{// –ö–Ω–æ–ø–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è (—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è) –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è.
          size:{// –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –∫–Ω–æ–ø–∫–∏. –î–ï–§–û–õ–¢: 20px
            minHeight: '20px',
            maxHeight: '22px'
          },
          background: 'rgb(0 0 0)',
          color: 'white',
          border: 'unset', // –ë–æ—Ä–¥–µ—Ä –∫–Ω–æ–ø–∫–∏.
          boxShadow: '0px 1px 0px 1px rgb(86 136 163)',
          borderRadius: '0px 0px 3px 3px',
          float: 'left',
          fontSize: '14px',
          lineHeight: '14px',
          margin: '0px 5px 0px 1px',
          padding: '3px',
          hover:{// –í–∏–¥ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É.
            background: 'rgb(75 75 75)',
            color: 'rgb(212 255 251)'
          }
        },
        buttonSearch:{// –ö–Ω–æ–ø–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –º–µ–Ω—é –ø–æ–∏—Å–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è. –°–ø–∏—Å–æ–∫ –ø–æ–∏—Å–∫–æ–≤ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç—Å—è –≤—ã—à–µ –≤ –∫–æ–¥–µ.
          size:{// –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –∫–Ω–æ–ø–∫–∏. –î–ï–§–û–õ–¢: 20px
            minHeight: '20px',
            maxHeight: '22px'
          },
          background: 'rgb(0 0 0)',
          color: 'white',
          border: 'unset', // –ë–æ—Ä–¥–µ—Ä –∫–Ω–æ–ø–∫–∏.
          boxShadow: '0px 1px 0px 1px rgb(86 136 163)',
          borderRadius: '0px 0px 3px 3px',
          float: 'left',
          fontSize: '14px',
          lineHeight: '14px',
          margin: '0px 5px 0px 1px',
          padding: '3px',
          hover:{// –í–∏–¥ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É.
            background: 'rgb(75 75 75)',
            color: 'rgb(212 255 251)'
          }
        },
        buttonTurnOffZoom:{// –ö–Ω–æ–ø–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –†–ï–ñ–ò–ú–ê –ó–£–ú–ê (–≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –°–¢–ê–ù–î–ê–†–¢–ù–û–ú–£ –†–ï–ñ–ò–ú–£).
          size:{// –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –∫–Ω–æ–ø–∫–∏. –î–ï–§–û–õ–¢: 20px
            minHeight: '20px',
            maxHeight: '22px'
          },
          background: 'rgb(0 0 0)',
          color: 'white',
          border: 'unset', // –ë–æ—Ä–¥–µ—Ä –∫–Ω–æ–ø–∫–∏.
          boxShadow: '0px 1px 0px 1px rgb(86 136 163)',
          borderRadius: '0px 0px 3px 3px',
          float: 'left',
          fontSize: '14px',
          lineHeight: '14px',
          margin: '0px 5px 0px 1px',
          padding: '3px',
          hover:{// –í–∏–¥ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É.
            background: 'rgb(75 75 75)',
            color: 'rgb(212 255 251)'
          }
        },
      },
      buttonContainerZoomed:{
        widthMinusSize: '20px' // –°—Ä–µ–∑–∞–µ—Ç –¥–ª–∏–Ω—É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –∏—Ç–µ–º–∞ –≤ –†–ï–ñ–ò–ú–ï –ó–£–ú–ê –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –æ–Ω–∞ –Ω–µ –∑–∞—Ö–æ–¥–∏–ª–∞ –∑–∞ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π —Å–∫—Ä–æ–ª–ª–±–∞—Ä. –î–ï–§–û–õ–¢: '20px'.
      },
      searchMenu:{// –ú–µ–Ω—é –ø–æ–∏—Å–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π, –ø–æ—è–≤–ª—è—é—â–µ–µ—Å—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ –ø–æ–∏—Å–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.
        size:{// –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –º–µ–Ω—é. –î–ï–§–û–õ–¢: 100px
          minWidth: '100px',
          minHeight: '100px'
        },
        background: 'rgb(45, 5, 66)',
        itemsInColumn: '1', // –°–∫–æ–ª—å–∫–æ –ø–æ–∏—Å–∫–æ–≤–∏–∫–æ–≤ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ. –î–µ—Ñ–æ–ª—Ç: 1
        gap: '4px', // –û—Ç—Å—Ç—É–ø –º–µ–∂–¥—É –ø–æ–∏—Å–∫–æ–≤–∏–∫–∞–º–∏.
        padding: '10px',
        border: 'unset',
        borderRadius: '3px',
        items:{// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–∏–¥–∞ –∫–Ω–æ–ø–æ–∫-–ø–æ–∏—Å–∫–æ–≤–∏–∫–æ–≤.
          background: 'white',
          color: 'black',
          borderRadius: '3px',
          padding: '3px 10px 3px 10px',
          fontSize: '12px',
          lineHeight: '12px',
          hover:{// –í–∏–¥ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É-–ø–æ–∏—Å–∫–æ–≤–∏–∫.
            background: 'rgb(213, 213, 239)'
          }
        }
      }
    },
      
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–ª—å–±–æ–º–∞.
    album = {
      size:{// –†–∞–∑–º–µ—Ä –∞–ª—å–±–æ–º–∞.
        maxWidth: 'unset', // –î–ª–∏–Ω–∞
        maxHeight: '400px' // –®–∏—Ä–∏–Ω–∞
      },
      padding: '3px 0px 5px 0px',
      margin: '23px 0px 20px 0px',
      boxShadow: '0px 0px 1px black',
      info:{// –°–∫–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –∞–ª—å–±–æ–º–µ.
        fontSize: '25px',
        lineHeight: '25px',
        padding: '3px',
        margin: '-5px 0px 0px 0px',
        borderRadius: '0px 0px 15px 0px',
        background: 'rgb(0, 0, 0)',
        color: 'rgb(255, 255, 255)',
        boxShadow: '0px 0px 3px rgb(219 60 169), 0px 0px 3px 0px rgb(0 0 0)'
      },
      list:{// –°–∫—Ä–æ–ª–ª–±–∞—Ä –∏—Ç–µ–º–æ–≤ –≤ –∞–ª—å–±–æ–º–µ.
        scrollbar:{
          sc:{// –°–∞–º —Å–∫—Ä–æ–ª–ª–±–∞—Ä
            size:{
              width: '8px',
              height: '8px'
            },
            background: 'rgb(235, 235, 235)'
          },
          track:{// –¢—Ä—ç–∫, —Ç.–µ. —Ç–æ, –ø–æ —á–µ–º—É –µ–∑–¥–∏—Ç —Ç—É–º–±.
            background: 'rgb(205, 205, 235)',
            borderRadius: '10px',
            margin: '3px'
          },
          trackPiece:{// –ß–∞—Å—Ç—å —Ç—Ä—ç–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –Ω–µ –ø–µ—Ä–µ–∫—Ä—ã–≤–∞–µ—Ç—Å—è —Ç—É–º–±.
            background: 'unset',
            border: '3px solid rgba(155, 105, 105, 0)',
            borderRadius: '10px',
            size:{
            width: '1px',
            height: '1px'
            }
          },
          thumb:{// –¢—É–º–±, —Ç.–µ. —Ç–æ, –±–ª–∞–≥–æ–¥–∞—Ä—è —á–µ–º—É –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Å–∫—Ä–æ–ª–ª–±–∞—Ä—É, —Ç.–µ –µ–≥–æ –ø–æ–¥–≤–∏–∂–Ω–∞—è —á–∞—Å—Ç—å.
            background: 'rgba(11 20 200 / 0.6)',
            border: '1px solid rgba(10 20 200 / 0.40)',
            borderRadius: '18px',
            hover: {// –í–∏–¥ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ –Ω–∞ —Ç—É–º–±.
              background: 'rgba(11 40 220 / 0.6)'
            }
          },
          corner:{// –£–≥–æ–ª —Å–∫—Ä–æ–ª–ª–±–∞—Ä–∞, –≥–¥–µ –≤—Å—Ç—Ä–µ—á–∞—é—Ç—Å—è –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π –∏ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π —Å–∫—Ä–æ–ª–ª–±–∞—Ä—ã.
            background: 'rgb(205, 205, 235)'
          }
        }
      },
      preview:{// –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (–û–ë–´–ß–ù–´–ô –†–ï–ñ–ò–ú. –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∏—Ç–µ–º).
        position:{// –ü–æ–∑–∏—Ü–∏—è –ø—Ä–µ–≤—å—é.
          top: '20px',
          left: '17%'
        },
        size:{// –†–∞–∑–º–µ—Ä –ø—Ä–µ–≤—å—é.
          width: '840px', // –î–ª–∏–Ω–∞
          height: '840px' // –®–∏—Ä–∏–Ω–∞
        },
        background: 'rgba(0, 0, 0, 0.5)',
        boxShadow: '0px 1px 5px black', // –¢–µ–Ω—å –ø—Ä–µ–≤—å—é.
        imageCount:{// –¢–µ–∫—É—â–∏–π –Ω–æ–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è / –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –∞–ª—å–±–æ–º–µ.
          size:{
            width: 'max-content'
          },
          position:{
            top: '5px',
            left: '5px'
          },
          background: 'black',
          color: 'white',
          fontSize: '13px',
          fontWeight: '500',
          lineHeight: '13px',
          border: '2px solid rgb(64 63 63)',
          borderRadius: '6px',
          padding: '3px 3px 3px 3px',
          margin: '0px 0px 0px 0px'
        },
        imageInfo:{// –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏.
          size:{
            width: 'max-content'
          },
          position:{
            top: '30px',
            left: '5px'
          },
          background: 'black',
          color: 'white',
          fontSize: '13px',
          fontWeight: '500',
          lineHeight: '13px',
          border: '2px solid rgb(64 63 63)',
          borderRadius: '6px',
          padding: '3px 3px 3px 3px',
          margin: '0px 0px 0px 0px'
        },
        imageZoomLevel:{// –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —É—Ä–æ–≤–Ω–µ –∑—É–º–∞ —Ç–µ–∫—É—â–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è.
          size:{
            width: 'max-content'
          },
          position:{
            top: '55px',
            left: '5px'
          },
          background: 'black',
          color: 'white',
          fontSize: '13px',
          fontWeight: '500',
          lineHeight: '13px',
          border: '2px solid rgb(64 63 63)',
          borderRadius: '6px',
          padding: '3px 3px 3px 3px',
          margin: '0px 0px 0px 0px'
        },
        imageTitle:{// Title –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
          size:{
            width: 'max-content',
            maxWidth: '200px',
            maxHeight: '247px'
          },
          position:{
            top: '80px',
            left: '5px'
          },
          background: 'black',
          color: 'white',
          fontSize: '13px',
          fontWeight: '500',
          lineHeight: '13px',
          border: '2px solid rgb(64 63 63)',
          borderRadius: '6px',
          padding: '3px 3px 3px 3px',
          margin: '0px 0px 0px 0px'
        },
        imageLinksField:{// –°—Å—ã–ª–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (—É –ø–æ–¥–±–æ—Ä–æ–∫)
          size:{
            width: 'unset',
            height: 'unset'
          },
          position:{
            top: '87.6%',
            left: '5px'
          },
          background: 'black',
          color: 'white',
          fontSize: '13px',
          fontWeight: '500',
          lineHeight: '13px',
          border: '2px solid rgb(64 63 63)',
          borderRadius: '6px',
          padding: '3px 3px 3px 3px',
          margin: '0px 0px 0px 0px',
          
          title:{// Title
            size:{
              width: '100%',
              maxHeight: '20px'
            },
            position:{
              top: '-2px',
              left: '0px'
            },
            background: 'black',
            color: 'white',
            fontSize: '13px',
            fontWeight: '500',
            lineHeight: '13px',
            border: '1px solid rgb(64 63 63)',
            borderRadius: '0px',
            padding: '3px 3px 3px 3px',
            margin: '0px 0px 3px 0px',
          },
          
          list:{
            size:{
              width: '197px',
              height: '65px'
            },
            position:{
              top: 'unset',
              left: 'unset'
            },
            background: 'black',
            color: 'white',
            fontSize: '13px',
            fontWeight: '500',
            lineHeight: '13px',
            border: 'unset',
            borderRadius: 'unset',
            padding: '3px 3px 3px 3px',
            margin: '0px 0px 0px 0px',
            
            items:{
              color: 'white',
              fontSize: '13px',
              fontWeight: '500',
              lineHeight: '13px',
              border: 'unset',
              margin: '0px 0px 0px 3px',
              hover:{
                color: 'red',
                cursor: 'pointer'
              }
            }
          }
        },
        navigationButtons:{// –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –≤ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (–∫–æ–≥–¥–∞ –≤—ã–±—Ä–∞–Ω –∏—Ç–µ–º –≤ –∞–ª—å–±–æ–º–µ).
          previous:{// –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
            size:{
              width: '50px',
              height: '200px'
            },
            borderRadius: '100% 0px 0px 100%',
            position:{
              top: 'calc(50% - 200px / 2)',
              left: 'calc(100% - 17% - 840px - 50px - 5px)'
            },
            background: 'rgba(255, 255, 255, 0.4)',
            color: 'rgba(60, 60, 60, 0.6)',
            fontSize: '25px',
            border: '1px solid black',
            zIndex: '2',
            hover:{
              background: 'rgba(255, 255, 255, 0.6)',
              cursor: 'pointer'
            }
          },
          next:{// –ö–Ω–æ–ø–∫–∞ "–í–ø–µ—Ä—ë–¥"
            size:{
              width: '50px',
              height: '200px'
            },
            borderRadius: '0px 100% 100% 0px',
            position:{
              top: 'calc(50% - 200px / 2)',
              right: 'calc(100% - 17% - 840px - 50px - 2px)'
            },
            background: 'rgba(255, 255, 255, 0.4)',
            color: 'rgba(60, 60, 60, 0.6)',
            fontSize: '25px',
            border: '1px solid black',
            zIndex: '2',
             hover:{
              background: 'rgba(255, 255, 255, 0.6)',
              cursor: 'pointer'
            }
          },
          close:{// –ö–Ω–æ–ø–∫–∞ "–ó–ê–∫—Ä—ã—Ç—å".
            size:{
              width: '50px',
              height: '50px'
            },
            borderRadius: '50%',
            position:{
              top: '20px',
              right: 'calc(100% - 17% - 840px - 50px - 15px)'
            },
            background: 'rgba(225, 22, 22, 0.4)',
            color: 'black',
            fontSize: '25px',
            lineHeight: '25px',
            border: '1px solid black',
            zIndex: '2',
            hover:{
              background: 'rgb(225 22 22 / 50%)',
              cursor: 'pointer'
            }
          }
        },
        scrollbar:{// –°–∫—Ä–æ–ª–ª–±–∞—Ä –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (–∫–æ–≥–¥–∞ –∏—Ç–µ–º –≤—ã–±—Ä–∞–Ω –∏ –≤–∫–ª—é—á—ë–Ω –†–ï–ñ–ò–ú –ó–£–ú–ê).
          sc:{// –°–∞–º —Å–∫—Ä–æ–ª–ª–±–∞—Ä
            size:{
              width: '8px',
              height: '8px'
            },
            background: 'rgb(235, 235, 235)'
          },
          track:{// –¢—Ä—ç–∫, —Ç.–µ. —Ç–æ, –ø–æ —á–µ–º—É –µ–∑–¥–∏—Ç —Ç—É–º–±.
            background: 'rgb(205, 205, 235)',
            borderRadius: '10px',
            margin: '3px'
          },
          trackPiece:{// –ß–∞—Å—Ç—å —Ç—Ä—ç–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –Ω–µ –ø–µ—Ä–µ–∫—Ä—ã–≤–∞–µ—Ç—Å—è —Ç—É–º–±.
            background: 'unset',
            border: '3px solid rgba(155, 105, 105, 0)',
            borderRadius: '10px',
            size:{
            width: '1px',
            height: '1px'
            }
          },
          thumb:{// –¢—É–º–±, —Ç.–µ. —Ç–æ, –±–ª–∞–≥–æ–¥–∞—Ä—è —á–µ–º—É –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Å–∫—Ä–æ–ª–ª–±–∞—Ä—É, —Ç.–µ –µ–≥–æ –ø–æ–¥–≤–∏–∂–Ω–∞—è —á–∞—Å—Ç—å.
            background: 'rgba(11 20 200 / 0.6)',
            border: '1px solid rgba(10 20 200 / 0.40)',
            borderRadius: '18px',
            hover: {// –í–∏–¥ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ –Ω–∞ —Ç—É–º–±.
              background: 'rgba(11 40 220 / 0.6)'
            }
          },
          corner:{// –£–≥–æ–ª —Å–∫—Ä–æ–ª–ª–±–∞—Ä–∞, –≥–¥–µ –≤—Å—Ç—Ä–µ—á–∞—é—Ç—Å—è –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π –∏ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π —Å–∫—Ä–æ–ª–ª–±–∞—Ä—ã.
            background: 'rgb(205, 205, 235)'
          }
        }
      },
      previewZoomed:{// –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –ø—Ä–∏ –∑—É–º–µ. (–†–ï–ñ–ò–ú –ó–£–ú–ê. –ü—Ä–∏ –≤–∫–ª—é—á–µ–Ω–∏–∏ –∑—É–º–∞ –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –∏—Ç–µ–º–µ).
        // –ö–†–ê–ô–ù–ï –ù–ï–û–ë–•–û–î–ò–ú–û, —á—Ç–æ–±—ã —Ä–∞–∑–º–µ—Ä –∏ –ø–æ–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø—Ä–∏ –∑—É–º–µ, —Å–æ–≤–ø–∞–¥–∞–ª–∏ —Å —Ä–∞–∑–º–µ—Ä–æ–º –∏ –ø–æ–ª–æ–∂–µ–Ω–∏–µ–º –û–ë–´–ß–ù–û–ì–û –†–ï–ñ–ò–ú–ê –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞.
        position:{// –ü–æ–∑–∏—Ü–∏—è –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.
          top: '20px',
          left: '17%'
        },
        size:{// –†–∞–∑–º–µ—Ä –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.
          width: '840px',
          height: '840px'
        },
        background: 'rgb(0, 0, 0)',
        boxShadow: '0px 1px 5px black'
      },
      albumCreatingBtn:{
        size:{
          maxHeight: '20px'
        },
        background: 'black',
        color: 'white',
        fontSize: '13px',
        lineHeight: '13px',
        padding: '3px',
        border: '1px solid rgb(157 154 154)',
        borderRadius: '3px',
        top: '22px',
        margin: '0px 5px 0px 0px',
        hover:{
          background: 'rgb(72 72 72)',
          cursor: 'pointer'
        }
      },
      albumCreatingMergeBtn:{
        size:{
          maxHeight: '20px'
        },
        background: 'black',
        color: 'white',
        fontSize: '13px',
        lineHeight: '13px',
        padding: '3px',
        border: '1px solid rgb(157 154 154)',
        borderRadius: '3px',
        top: '22px',
        margin: '0px 5px 0px 0px',
        hover:{
          background: 'rgb(72 72 72)',
          cursor: 'pointer'
        }
      },
      compilationToAlbumBtn:{
        size:{
          maxHeight: '20px'
        },
        background: 'black',
        color: 'white',
        fontSize: '13px',
        lineHeight: '13px',
        padding: '3px',
        border: '1px solid rgb(157 154 154)',
        borderRadius: '3px',
        top: '22px',
        margin: '0px 5px 0px 0px',
        hover:{
          background: 'rgb(72 72 72)',
          cursor: 'pointer'
        }
      }
    };

function checkLinks(t, tar){
  if(t){
    tar.textContent = '';
    for(let i = 0, arr = t.split(' ').filter(a => a); i < arr.length; i++){
      new ImgLinksItem ({
        name: arr[i].replace(/(http|https):\/\/([^/]+).*/, '$2'),
        href: arr[i],
        target: tar
      })
    }
  }
}
class Alert{
  constructor({text, target, top, left, timer}){
    this.alert=document.createElement('div');
    this.alert.className='dtf-album-alert';
    this.alert.textContent=text;
    this.alert.style.top=top;
    this.alert.style.left=left;
    setTimeout(() => {
        try {
          this.alert.remove();
        }
        catch (err) {
          console.log(err);
        }
    }, timer);

    target.appendChild(this.alert);
    return this.alert;
  }
}
class ButtonCreateAlbum{
  constructor({target, where}){
    this.a=document.createElement('button');
    this.a.className='dtf-album-button-create';
    if(where.style.display){
        if(where.style.display === 'none'){
          this.a.textContent=buttonsText.createAlbum.pressed;
        }else
        if(!where.style.display === 'none'){
          this.a.textContent=buttonsText.createAlbum.default;
        }
    }else
    if(!where.style.display){
      this.a.textContent=buttonsText.createAlbum.default;
    }
    // this.a.textContent=buttonsText.createAlbum.default
    this.a.onclick = function(e){
        if(e.target.nextElementSibling.classList.value.match(/figure-gallery/)){
            if(!e.target.nextElementSibling.style.display){
                if(e.target.nextElementSibling.querySelector(`.content.content--full figure[class='figure-gallery'] textarea[name='gallery-data-holder']`)){
¬† ¬† ¬† ¬† ¬† ¬†         console.log('Album is founded');
                    let album = new Album({
                      where: e.target.nextElementSibling.nextElementSibling,
                      target: e.target.nextElementSibling
                    });
                    let artsN = 0;

                    for(let i = 0, arr = JSON.parse(e.target.nextElementSibling.querySelector(`textarea[name='gallery-data-holder']`).textContent.trim()); i <¬†arr.length; i++){
¬† ¬† ¬† ¬†                 if(arr[i].image.type === 'image'){
¬† ¬† ¬† ¬† ¬† ¬†                 new AlbumItem({
¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬†                 imgUrl: `https://leonardo.osnova.io/${arr[i].image.data.uuid}`,
                                imgSize: arr[i].image.size,
                                imgTitle: `${arr[i].title}`,
¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬†                 target: album.list
¬† ¬† ¬† ¬† ¬† ¬†                 })
                          artsN++;
¬† ¬† ¬† ¬†                 }
                      if(i+1 === arr.length){
                          album.info.textContent = artsN;
                      }
¬† ¬†                }
                    
               }
              e.target.nextElementSibling.style.display = 'none';
              e.target.textContent = buttonsText.createAlbum.pressed
            }else
            if(e.target.nextElementSibling.style.display === 'none'){
                e.target.nextElementSibling.style.display = '';
              e.target.textContent = buttonsText.createAlbum.default
                if(e.target.nextElementSibling.nextElementSibling.classList.value.match(/dtf-album$/)){
                    e.target.nextElementSibling.nextElementSibling.remove();
                }
            }
        }
    }
    // target.parentNode.parentNode.parentNode.parentNode.insertBefore(this.a, target.parentNode.parentNode.parentNode);
    target.parentNode.insertBefore(this.a, where);
    
    return this.a;
  }
}
class CreateAlbumButtonMerged{
  constructor({target}){
    this.a=document.createElement('button');
    this.a.className='dtf-album-button-create-merge';
    this.a.textContent=buttonsText.createAlbumMerge.default;
    this.a.onclick = function(e){
      if(!document.querySelector(`div[class='dtf-album-merged']`)){
          if(document.querySelector(`.content.content--full figure[class='figure-gallery'] textarea[name='gallery-data-holder']`)){
            console.log('Yes, founded');
              let album = new AlbumMerged({
                  where: e.target.nextElementSibling.nextElementSibling,
                  target: e.target.nextElementSibling
              });
              let artsN = 0;
              for(let a = 0, albums = document.querySelectorAll(`.content.content--full figure[class='figure-gallery'] textarea[name='gallery-data-holder']`); a < albums.length; a++){
                  for(let i = 0, albumItems = JSON.parse(albums[a].textContent.trim()); i < albumItems.length; i++){
                      if(albumItems[i].image.type === 'image'){
                          new AlbumItem({
                              imgUrl: `https://leonardo.osnova.io/${albumItems[i].image.data.uuid}`,
                              imgSize: albumItems[i].image.size,
                              imgTitle: `${albumItems[i].title}`,
                              target: album.list
                          })
                          artsN++;
                      }
                      if(i+1 === albumItems.length){
                          album.info.textContent = artsN;
                          if(!albums[a].parentNode.parentNode.parentNode.style.display){
                              albums[a].parentNode.parentNode.parentNode.style.display = 'none';
                          }else
                          if(!albums[a].parentNode.parentNode.parentNode.style.display === 'none'){
                              albums[a].parentNode.parentNode.parentNode.style.display = 'none';
                          }
                          if(albums[a].parentNode.parentNode.parentNode.previousElementSibling){
                              if(albums[a].parentNode.parentNode.parentNode.previousElementSibling.classList){
                                  if(albums[a].parentNode.parentNode.parentNode.previousElementSibling.classList.value.match(/dtf-album-button-create/)){
                                      if(!albums[a].parentNode.parentNode.parentNode.previousElementSibling.style.display){
                                          albums[a].parentNode.parentNode.parentNode.previousElementSibling.style.display = 'none';
                                      }else
                                      if(!albums[a].parentNode.parentNode.parentNode.previousElementSibling.style.display === 'none'){
                                          albums[a].parentNode.parentNode.parentNode.previousElementSibling.style.display = 'none';
                                      }
                                  }
                              }
                          }
                      }
                  }
              }
            e.target.textContent=buttonsText.createAlbumMerge.pressed;
          }
      }else
      if(document.querySelector(`div[class='dtf-album-merged']`)){
          for(let r = 0, returnAlbums = document.querySelectorAll(`.content.content--full figure[class='figure-gallery']`); r < returnAlbums.length; r++){
              if(returnAlbums[r].style.display === 'none'){
                  returnAlbums[r].style.display = '';
              }
          }
          if(mode.main.active && !mode.main.auto || mode.main.active && mode.main.auto && mode.main.buttons){
            console.log('I see you');
              for(let r = 0, returnAlbumButtons = document.querySelectorAll(`button[class='dtf-album-button-create']`); r < returnAlbumButtons.length; r++){
                  if(returnAlbumButtons[r].style.display === 'none'){
                      returnAlbumButtons[r].style.display = '';
                  }
              }
          }
          e.target.textContent=buttonsText.createAlbumMerge.default;
          document.querySelector(`div[class='dtf-album-merged']`).remove();
      }
    }
    target.children[0].parentNode.insertBefore(this.a, target.children[0]);
    return this.a;
  }
}
class CreateAlbumButtonCompilation{
  constructor({target}){
    this.a=document.createElement('button');
    this.a.className='dtf-album-button-create-compilation';
    this.a.textContent=buttonsText.createAlbumCompilation.default;
    this.a.onclick = function(e){
        console.log('Compilation is founded');
        function getLinks(t){
          if(t.nextElementSibling.querySelector(`div[class='l-island-a'] a`)){
              let linksArr = [];
              for(let l = 0, links = t.nextElementSibling.querySelectorAll(`div[class='l-island-a'] a`); l < links.length; l++){
                linksArr.push(links[l].href.replace(dtfFilter, '$1'));
              }
              if(!t.nextElementSibling.querySelector(`div[class='l-island-a'] a`).parentNode.style.display){
                  t.nextElementSibling.querySelector(`div[class='l-island-a'] a`).parentNode.style.display = 'none';
              }
              return `${linksArr.join(' ')}`;
            }
        }
        if(!document.querySelector(`div[class='dtf-album-compilation']`)){
            let album = new AlbumCompilation({
                where: e.target.nextElementSibling.nextElementSibling,
                target: e.target.nextElementSibling
            });
            for(let i = 0, images = document.querySelectorAll(`.content.content--full figure[class='figure-image'] .andropov_image`); i < images.length; i++){
                console.log(images.length);
                let el = images[i].parentNode.parentNode.parentNode;
                if(!el.style.display){
                    el.style.display = 'none';
                }
                new AlbumItem({
                    imgUrl: images[i].getAttribute('data-image-src').replace(filter, '$1'),
                    imgLinks: getLinks(el),
                    // title: getTitle(el),
                    target: album.list
                })
                if(i+1 === images.length){
                    album.info.textContent = images.length;
                    e.target.textContent = buttonsText.createAlbumCompilation.pressed;
                }
            }
            // target.children[0].parentNode.insertBefore(this.a, target.children[0]);
        }else
        if(document.querySelector(`div[class='dtf-album-compilation']`)){
          console.log('Album compilation 2.0 detected!');
            for(let i = 0, images = document.querySelectorAll(`.content.content--full figure[class='figure-image'] img`); i < images.length; i++){
                let el = images[i].parentNode.parentNode.parentNode.parentNode.parentNode;
                if(el.style.display = 'none'){
                    el.style.display = '';
                }
            }
            document.querySelector(`div[class='dtf-album-compilation']`).remove();
            e.target.textContent = buttonsText.createAlbumCompilation.default;
        }
    }
    target.children[0].parentNode.insertBefore(this.a, target.children[0]);
    return this.a;
  }
}
class Album{
    constructor({where, target}){
        this.album=document.createElement('div');
        this.album.className='dtf-album';
        target.parentNode.insertBefore(this.album, where);

        this.albumInfo=document.createElement('div');
        this.albumInfo.className='album-info';
        this.textContent = '';
        this.album.appendChild(this.albumInfo);

        this.itemsList=document.createElement('div');
        this.itemsList.className='album-items-list';
        this.album.appendChild(this.itemsList);

        return {info:this.albumInfo, list:this.itemsList};
    }
}
class AlbumCompilation{
    constructor({where, target}){
        this.album=document.createElement('div');
        this.album.className='dtf-album-compilation';
        target.parentNode.insertBefore(this.album, where);

        this.albumInfo=document.createElement('div');
        this.albumInfo.className='album-info';
        this.textContent = '';
        this.album.appendChild(this.albumInfo);

        this.itemsList=document.createElement('div');
        this.itemsList.className='album-items-list';
        this.album.appendChild(this.itemsList);

        return {info:this.albumInfo, list:this.itemsList};
    }
}
class AlbumMerged{
    constructor({where, target}){
        this.album=document.createElement('div');
        this.album.className='dtf-album-merged';
        target.parentNode.insertBefore(this.album, where);

        this.albumInfo=document.createElement('div');
        this.albumInfo.className='album-info';
        this.textContent = '';
        this.album.appendChild(this.albumInfo);

        this.itemsList=document.createElement('div');
        this.itemsList.className='album-items-list';
        this.album.appendChild(this.itemsList);

        return {info:this.albumInfo, list:this.itemsList};
    }
}
class SearchMenu{
    constructor({btn, link, target}){
        this.menu=document.createElement('div');
        this.menu.className='srcSearch';
        this.menu.style.top=`${btn.getBoundingClientRect().top + 10}px`;
        this.menu.style.left=`${btn.getBoundingClientRect().left + 10}px`;
        this.menu.setAttribute('tabindex', '-1');
        this.menu.onblur = function(e){
            setTimeout(() => {
                e.target.remove();
            }, 1000)
        }
        target.appendChild(this.menu);

        for(let i = 0; i < searches.length; i++){
                if(searches[i].use){
                  new SearchMenuItem({
                    name: searches[i].name,
                    searchUrl: searches[i].url,
                    targetUrl: link,
                    elem: this.menu
                  });
                }
            }

        return this.menu;
    }
}
class SearchMenuItem{
    constructor({name, searchUrl, targetUrl, elem}) {
      this.e=document.createElement('a');
      this.e.className=`searchmenuItem`;
      this.e.textContent=name;
      this.e.href=`${searchUrl}${targetUrl}`;
      this.e.target='_blank';
      this.e.onclick = function(s){
        s.preventDefault();
        s.stopImmediatePropagation();
        window.open(s.target.href, '_blank');
      }
      elem.appendChild(this.e);
      return this.e;
    }
}

class AlbumItem{
¬† constructor({imgUrl, imgSize, imgLinks, imgTitle, target}){
    this.e=document.createElement('div');
¬† ¬† this.e.className='album-item';
¬† ¬† this.e.setAttribute('tabindex', '-1');
¬† ¬† target.appendChild(this.e);

    this.bContainer=document.createElement('div');
¬† ¬† this.bContainer.className='album-item-buttonContainer';
¬† ¬† this.e.appendChild(this.bContainer);

    this.bCopyLink=document.createElement('button');
¬† ¬† this.bCopyLink.className='album-item-button-copyLink';
    this.bCopyLink.textContent = buttonsText.copyLink;
    this.bCopyLink.onclick = async function(e){
        navigator.clipboard.writeText(e.target.parentNode.nextElementSibling.src);
        new Alert ({
          text: alertTextUrlCopied,
          target: document.body,
          top: `${e.target.getBoundingClientRect().top + 27}px`,
          left: `${e.target.getBoundingClientRect().left + 0}px`,
          timer: 4000
        });
    }
¬† ¬† this.bContainer.appendChild(this.bCopyLink);
    
    this.dImgDownload=document.createElement('button');
    this.dImgDownload.className='album-item-button-download';
    this.dImgDownload.textContent = buttonsText.saveImage;
    // this.dImgDownload.href=ev.target.parentNode.nextElementSibling.src
    // this.dImgDownload.download='Test'
    this.dImgDownload.onclick = async function(ev){
      // ev.target.href=ev.target.parentNode.nextElementSibling.src
        let res = await fetch(ev.target.parentNode.nextElementSibling.src);
        let blob = await res.blob();
        let blobUrl = URL.createObjectURL(blob);
        let d = new Date().toString();
        let link = document.createElement('a');
        link.href = blobUrl;
        // link.download=`DTF-image (day ${d.getDay()}, month ${d.getMonth()}, ${d.getUTCHours()}#${d.getUTCMinutes()}#${d.getUTCSeconds()}).${blob.type.replace(/[^]+\/(.+)/, '$1')}`;
        link.download=`DTF-Image (${
            d.replace(/([^]+) GMT.+/, function(def, g){
                return g.replace(/:/gm, '#');
            })
        }).${blob.type.replace(/[^]+\/(.+)/, '$1')}`
        link.dispatchEvent(new MouseEvent('click', { 
          bubbles: true, 
          cancelable: true, 
          view: window 
        }));
    }
    this.bContainer.appendChild(this.dImgDownload);

    this.bImgSearch=document.createElement('button');
¬† ¬† this.bImgSearch.className='album-item-button-imgSearch';
    this.bImgSearch.textContent = buttonsText.searchImage;
    this.bImgSearch.onclick = function(ev){
        let menu = new SearchMenu({
            btn: ev.target,
            link: ev.target.parentNode.nextElementSibling.src,
            target: ev.target.parentNode.parentNode.parentNode
        })
        menu.focus();
    }
¬† ¬† this.bContainer.appendChild(this.bImgSearch);
    
    this.bTurnOffZoom=document.createElement('button');
¬† ¬† this.bTurnOffZoom.className='album-item-button-turnOffZoom';
    this.bTurnOffZoom.textContent = buttonsText.turnOffZoom;
    this.bTurnOffZoom.onclick = async function(e){
        if(focused){
            if(focused.classList.value.match(/zoomed/)){
                focused.scrollTo(0, 0);
                focused.children[1].style.zoom = '100%';
                focused.classList.remove('zoomed');
            }
            imagePreviewer.zoom.textContent = `${buttonsText.zoomLevel}${focused.children[1].style.zoom}`;
¬† ¬† ¬† ¬† }
    }
¬† ¬† this.bContainer.appendChild(this.bTurnOffZoom);

¬† ¬† this.i=document.createElement('img');
¬† ¬† this.i.className='item-image';
¬† ¬† this.i.src=imgUrl;
    if(imgSize) this.i.setAttribute('imgSize', imgSize);
    if(imgLinks) this.i.setAttribute('imgLinks', imgLinks);
    if(imgTitle) this.i.setAttribute('imgTitle', imgTitle);
    this.i.loading = 'lazy';
    this.i.style.zoom = '100%';
    this.i.onwheel = function(s){
        if(focused && button1Pressed){
            s.preventDefault();
            s.stopImmediatePropagation();
            if(s.target.parentNode.classList.value.match(/picked/) && !s.target.parentNode.classList.value.match(/zoomed/)){
                // s.preventDefault();
                // s.stopImmediatePropagation();
                s.target.parentNode.classList.add('zoomed');
            }else
            if(s.target.parentNode.classList.value.match(/picked/) && s.target.parentNode.classList.value.match(/zoomed/)){
              console.log(s)
                // s.preventDefault();
                // s.stopImmediatePropagation();
                if(s.deltaY < 0 && button1Pressed){
                    if(!s.target.style.zoom){
                        s.target.style.zoom = `125%`;
                        if(mode.smartZoom) focused.scrollTo(s.x, s.y);
                        imagePreviewer.zoom.textContent = `${buttonsText.zoomLevel}${s.target.style.zoom}`;
                    }else
                    if(s.target.style.zoom){
                        s.target.style.zoom = `${+s.target.style.zoom.replace('%', '') + 25}%`;
                        if(mode.smartZoom) focused.scrollTo(s.x, s.y);
                        imagePreviewer.zoom.textContent = `${buttonsText.zoomLevel}${s.target.style.zoom}`;
                    }
                }else
                if(s.deltaY > 0 && button1Pressed){
                    if(!s.target.style.zoom){
                        s.target.style.zoom = `75%`;
                        if(mode.smartZoom) focused.scrollTo(s.x, s.y);
                        imagePreviewer.zoom.textContent = `${buttonsText.zoomLevel}${s.target.style.zoom}`;
                    }else
                    if(s.target.style.zoom){
                        if(+s.target.style.zoom.replace('%', '') > 25){
                            s.target.style.zoom = `${+s.target.style.zoom.replace('%', '') - 25}%`;
                            if(mode.smartZoom) focused.scrollTo(s.x, s.y);
                            imagePreviewer.zoom.textContent = `${buttonsText.zoomLevel}${s.target.style.zoom}`;
                        }
                    }
                }
            }
        }
    }
¬† ¬† this.e.appendChild(this.i);

¬† ¬† return this.e, this.i;
¬† }
}
class AlbumPreview{
¬† constructor({previewer, target}){
¬† ¬† this.a=document.createElement('div');
¬† ¬† this.a.className='albumPreview-field';
¬† ¬† this.a.setAttribute('tabindex', '-1');
¬† ¬† target.appendChild(this.a);
      
¬† ¬† this.bL=document.createElement('button');
¬† ¬† this.bL.className = 'albumPreview-nav-previous-button';
    this.bL.textContent=buttonsText.previous;
¬† ¬† this.bL.onclick = function(){
¬† ¬† ¬† ¬† if(focused){
¬† ¬† ¬† ¬† ¬† ¬† if(focused.previousElementSibling){
                if(focused.classList.value.match(/zoomed/)){
                    focused.scrollTo(0, 0);
                    focused.children[1].style.zoom = '100%';
                    focused.classList.remove('zoomed');
                }
                imagePreviewer.zoom.textContent = `${buttonsText.zoomLevel}${focused.children[1].style.zoom}`;
                focused.classList.remove('picked');
¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† focused.previousElementSibling.focus();
¬† ¬† ¬† ¬† ¬† ¬† }else
            if(!focused.previousElementSibling){
                if(focused.classList.value.match(/zoomed/)){
                    focused.scrollTo(0, 0);
                    focused.children[1].style.zoom = '100%';
                    focused.classList.remove('zoomed');
                }
                imagePreviewer.zoom.textContent = `${buttonsText.zoomLevel}${focused.children[1].style.zoom}`;
                focused.classList.remove('picked');
¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† focused.parentNode.children[focused.parentNode.children.length-1].focus();
¬† ¬† ¬† ¬† ¬† ¬† }
¬† ¬† ¬† ¬† }
¬† ¬† }
¬† ¬† this.a.appendChild(this.bL)

¬† ¬† this.bR=document.createElement('button');
¬† ¬† this.bR.className = 'albumPreview-nav-next-button';
    this.bR.textContent=buttonsText.next;
¬† ¬† this.bR.onclick = function(){
¬† ¬† ¬† ¬† if(focused){
¬† ¬† ¬† ¬† ¬† ¬† if(focused.nextElementSibling){
                if(focused.classList.value.match(/zoomed/)){
                    focused.scrollTo(0, 0);
                    focused.children[1].style.zoom = '100%';
                    focused.classList.remove('zoomed');
                }
                imagePreviewer.zoom.textContent = `${buttonsText.zoomLevel}${focused.children[1].style.zoom}`;
                focused.classList.remove('picked');
¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† focused.nextElementSibling.focus();
¬† ¬† ¬† ¬† ¬† ¬† }else
            if(!focused.nextElementSibling){
                if(focused.classList.value.match(/zoomed/)){
                    focused.scrollTo(0, 0);
                    focused.children[1].style.zoom = '100%';
                    focused.classList.remove('zoomed');
                }
                imagePreviewer.zoom.textContent = `${buttonsText.zoomLevel}${focused.children[1].style.zoom}`;
                focused.classList.remove('picked');
¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† focused.parentNode.children[0].focus();
¬† ¬† ¬† ¬† ¬† ¬† }
¬† ¬† ¬† ¬† }
¬† ¬† }
¬† ¬† this.a.appendChild(this.bR);

    this.imgCount=document.createElement('div');
¬† ¬† this.imgCount.className='albumPreview-field-imgCount';
¬† ¬† this.imgCount.textContent = '';
¬† ¬† this.a.appendChild(this.imgCount);
    
    this.imgInfo=document.createElement('div');
¬† ¬† this.imgInfo.className='albumPreview-field-imgInfo';
¬† ¬† this.imgInfo.textContent = '';
¬† ¬† this.a.appendChild(this.imgInfo);
    
    this.imgZoom=document.createElement('div');
¬† ¬† this.imgZoom.className='albumPreview-field-imgZoom';
¬† ¬† this.imgZoom.textContent = '';
¬† ¬† this.a.appendChild(this.imgZoom);
    
    this.imgTitle=document.createElement('div');
¬† ¬† this.imgTitle.className='albumPreview-field-imgTitle';
¬† ¬† this.imgTitle.textContent = 'Links:';
¬† ¬† this.a.appendChild(this.imgTitle);
    
    this.imgLinksField=document.createElement('div');
    this.imgLinksField.className='albumPreview-field-imgLinksField';
    this.a.appendChild(this.imgLinksField);
    
    this.imgLinksFieldTitle=document.createElement('div');
    this.imgLinksFieldTitle.className='albumPreview-field-imgLinksField-title';
    this.imgLinksFieldTitle.textContent=buttonsText.linksList;
    this.imgLinksField.appendChild(this.imgLinksFieldTitle);
    
    this.imgLinksList=document.createElement('div');
    this.imgLinksList.className='albumPreview-field-imgLinksField-list';
    this.imgLinksField.appendChild(this.imgLinksList);
    
    this.buttonClose=document.createElement('button');
¬† ¬† this.buttonClose.className = 'albumPreview-nav-close-button';
    this.buttonClose.textContent=buttonsText.close;
    this.buttonClose.onclick = function(e){
      if(focused){
        // e.preventDefault();
        // e.stopPropagation();
        // e.stopImmediatePropagation();
        layout.style.zIndex = '';
        if(document.querySelector(`div[class='albumPreview-field']`)){
          document.querySelector(`div[class='albumPreview-field']`).remove();
          focused.classList.remove('picked');
          focused.parentNode.parentNode.classList.remove('preview-opened');
          document.body.classList.remove('blockScroll');
          if(focused.classList.value.match(/zoomed/)){
              focused.scrollTo(0, 0);
              focused.children[1].style.zoom = '100%';
              focused.classList.remove('zoomed');
          }
          focused.blur();
          focused = false;
        }
      }
    }
    this.a.appendChild(this.buttonClose);

¬† ¬† return this.a, {main:this.a, count:this.imgCount, info:this.imgInfo, zoom:this.imgZoom, title:this.imgTitle, imgLinks:this.imgLinksList};
¬† }
}
class ImgLinksItem{
¬† constructor({href, target}){
    this.i=document.createElement('a');
    this.i.textContent=href.replace(/(http|https):\/\/([^/]+).*/gm, '$2');
    this.i.href=href;
    this.i.target='_blank';
    
    target.appendChild(this.i);
    
    return this.i;
  }
}

    let css = document.createElement('style');
    css.textContent = `
.main.layout {
  /*z-index: 20;*/
}
.layout__right-column {
  z-index: 0;
}

body.blockScroll {
  overflow: hidden !important;
}

.dtf-album-alert {
  background: ${main.alert.background};
  color: ${main.alert.color};
  font-size: ${main.alert.fontSize};
  font-weight: ${main.alert.fontWeight};
  line-height: ${main.alert.lineHeight};
  width: ${main.alert.size.width};
  height: ${main.alert.size.height};
  border: ${main.alert.border};
  border-radius: ${main.alert.borderRadius};
  padding: ${main.alert.padding};
  position: fixed;
  z-index: ${main.alert.zIndex};
}

.dtf-album-button-create {
  max-height: ${album.albumCreatingBtn.size.maxHeight};
  background: ${album.albumCreatingBtn.background};
  color: ${album.albumCreatingBtn.color};
  font-size: ${album.albumCreatingBtn.fontSize};
  line-height: ${album.albumCreatingBtn.lineHeight};
  padding: ${album.albumCreatingBtn.padding};
  border: ${album.albumCreatingBtn.border};
  border-radius: ${album.albumCreatingBtn.borderRadius};
  position: relative;
  top: ${album.albumCreatingBtn.top};
  margin: ${album.albumCreatingBtn.margin};
}
.dtf-album-button-create:hover {
  background: ${album.albumCreatingBtn.hover.background};
  cursor: ${album.albumCreatingBtn.hover.cursor};
}

.dtf-album-button-create-merge {
  max-height: ${album.albumCreatingMergeBtn.size.maxHeight};
  background: ${album.albumCreatingMergeBtn.background};
  color: ${album.albumCreatingMergeBtn.color};
  font-size: ${album.albumCreatingMergeBtn.fontSize};
  line-height: ${album.albumCreatingMergeBtn.lineHeight};
  padding: ${album.albumCreatingMergeBtn.padding};
  border: ${album.albumCreatingMergeBtn.border};
  border-radius: ${album.albumCreatingMergeBtn.borderRadius};
  position: relative;
  top: ${album.albumCreatingMergeBtn.top};
  margin: ${album.albumCreatingMergeBtn.margin};
}
.dtf-album-button-create-merge:hover {
  background: ${album.albumCreatingMergeBtn.hover.background};
  cursor: ${album.albumCreatingMergeBtn.hover.cursor};
}

.dtf-album-button-create-compilation {
  max-height: ${album.compilationToAlbumBtn.size.maxHeight};
  background: ${album.compilationToAlbumBtn.background};
  color: ${album.compilationToAlbumBtn.color};
  font-size: ${album.compilationToAlbumBtn.fontSize};
  line-height: ${album.compilationToAlbumBtn.lineHeight};
  padding: ${album.compilationToAlbumBtn.padding};
  border: ${album.compilationToAlbumBtn.border};
  border-radius: ${album.compilationToAlbumBtn.borderRadius};
  position: relative;
  top: ${album.compilationToAlbumBtn.top};
  margin: ${album.compilationToAlbumBtn.margin};
}
.dtf-album-button-create-compilation:hover {
  background: ${album.compilationToAlbumBtn.hover.background};
  cursor: ${album.compilationToAlbumBtn.hover.cursor};
}

.dtf-album, .dtf-album-merged, .dtf-album-compilation {
  padding: ${album.padding};
  box-shadow: ${album.boxShadow};
  margin: ${album.margin};
}

.album-info {
  display: block;
  position: absolute;
  background: ${album.info.background};
  color: ${album.info.color};
  font-size: ${album.info.fontSize};
  line-height: ${album.info.lineHeight};
  margin: ${album.info.margin};
  padding: ${album.info.padding};
  border-radius: ${album.info.borderRadius};
  box-shadow: ${album.info.boxShadow};
}

.album-items-list {
  display: grid;
  grid-template-columns: repeat(${albumItems.itemsInColumn}, auto);
  grid-template-rows: ${albumItems.rowsTemplate};
  grid-gap: ${albumItems.gap};
  max-height: ${album.size.maxHeight};
  overflow: auto;
  text-align: center;
  justify-content: center;
  padding: ${albumItems.padding};
  overscroll-behavior: ${main.albums.overscroll};
}

.dtf-album.preview-opened:after, .dtf-album-merged.preview-opened:after, .dtf-album-compilation.preview-opened:after {
  content: '';
  display: block;
  width: -webkit-fill-available;
  height: -webkit-fill-available;
  background: ${album.preview.background};
  position: fixed;
  top: 0;
  left: 0;
  z-index: 100;
}

.album-items-list::-webkit-scrollbar {
  width: ${album.list.scrollbar.sc.size.width};
  height: ${album.list.scrollbar.sc.size.height};
  background: ${album.list.scrollbar.sc.background};
}
.album-items-list::-webkit-scrollbar-track {
  background: ${album.list.scrollbar.track.background};
  border-radius: ${album.list.scrollbar.track.borderRadius};
  margin: ${album.list.scrollbar.track.margin};
}
.album-items-list::-webkit-scrollbar-track-piece {
  background: ${album.list.scrollbar.trackPiece.background};
  border: ${album.list.scrollbar.trackPiece.border};
  border-radius: ${album.list.scrollbar.trackPiece.borderRadius};
  width: ${album.list.scrollbar.trackPiece.size.width};
  height: ${album.list.scrollbar.trackPiece.size.height};
}
.album-items-list::-webkit-scrollbar-thumb {
  background: ${album.list.scrollbar.thumb.background};
  border: ${album.list.scrollbar.thumb.border};
  border-radius: ${album.list.scrollbar.thumb.borderRadius};
}
.album-items-list::-webkit-scrollbar-thumb:hover {
  background: ${album.list.scrollbar.thumb.hover.background};
}
.album-items-list::-webkit-scrollbar-corner {
  background: ${album.list.scrollbar.corner.background};
}

.album-item {
  width: ${albumItems.size.width};
  height: ${albumItems.size.height};
  background: ${albumItems.background};
  text-align: center;
  box-shadow: ${albumItems.boxShadow};
  border-radius: ${albumItems.borderRadius};
  overflow: hidden;
  display: block;
  justify-content: center;
  align-content: center;
}
.album-item:not(.album-item.picked, .album-item.picked.zoomed):hover {
    box-shadow: ${albumItems.hover.boxShadow};
    cursor: ${albumItems.hover.cursor};
    filter: ${albumItems.hover.filter};
}

.album-item:not(.album-item.picked, .album-item.zoomed) img {
  max-width: ${albumItems.image.size.maxWidth};
  max-height: ${albumItems.image.size.maxHeight};
  margin: ${albumItems.image.margin};
}

.album-item.picked {
  background: ${albumItems.background};
  outline: unset;
  width: ${album.preview.size.width};
  height: ${album.preview.size.height};
  position: fixed;
  z-index: 1000;
  top: ${album.preview.position.top};
  left: ${album.preview.position.left};
  box-shadow: ${album.preview.boxShadow};
  display: grid;
  overflow: hidden;
}

.album-item.picked .album-item-buttonContainer {
  position: absolute;
  z-index: 1001;
}

.album-item.picked img {
  max-width: ${album.preview.size.width};
  max-height: ${album.preview.size.height};
  z-index: 1000;
}

.album-item.picked.zoomed {
  background: ${album.previewZoomed.background};
  outline: unset;
  width: ${album.previewZoomed.size.width};
  height: ${album.previewZoomed.size.height};
  position: fixed;
  z-index: 1000;
  top: ${album.previewZoomed.position.top};
  left: ${album.previewZoomed.position.left};
  box-shadow: ${album.previewZoomed.boxShadow};
  display: block;
  overflow: scroll;
  align-content: stretch;
}

.album-item.picked.zoomed .album-item-buttonContainer {
  z-index: 1001;
  position: fixed;
  width: calc(${album.preview.size.width} - ${albumItems.buttonContainerZoomed.widthMinusSize});
}

.album-item.picked.zoomed img {
  max-width: unset;
  max-height: unset;
  z-index: 1000;
}

.album-item-buttonContainer {
  position: relative;
  width: ${albumItems.buttonContainer.size.width};
  height: ${albumItems.buttonContainer.size.height};
  opacity: 0;
}
.album-item-buttonContainer:hover {
  opacity: 1;
}

.album-item-button-copyLink {
  min-height: ${albumItems.buttonContainer.buttonCopyLink.size.minHeight};
  max-height: ${albumItems.buttonContainer.buttonCopyLink.size.maxHeight};
  background: ${albumItems.buttonContainer.buttonCopyLink.background};
  color: ${albumItems.buttonContainer.buttonCopyLink.color};
  border: ${albumItems.buttonContainer.buttonCopyLink.border};
  box-shadow: ${albumItems.buttonContainer.buttonCopyLink.boxShadow};
  border-radius: ${albumItems.buttonContainer.buttonCopyLink.borderRadius};
  float: left;
  font-size: ${albumItems.buttonContainer.buttonCopyLink.fontSize};
  line-height: ${albumItems.buttonContainer.buttonCopyLink.lineHeight};
  margin: ${albumItems.buttonContainer.buttonCopyLink.margin};
  padding: ${albumItems.buttonContainer.buttonCopyLink.padding};
}
.album-item-button-copyLink:hover {
  background: ${albumItems.buttonContainer.buttonCopyLink.hover.background};
  color: ${albumItems.buttonContainer.buttonCopyLink.hover.color};
}

.album-item-button-imgSearch {
  min-height: ${albumItems.buttonContainer.buttonSearch.size.minHeight};
  max-height: ${albumItems.buttonContainer.buttonSearch.size.maxHeight};
  background: ${albumItems.buttonContainer.buttonSearch.background};
  color: ${albumItems.buttonContainer.buttonSearch.color};
  border: ${albumItems.buttonContainer.buttonSearch.border};
  box-shadow: ${albumItems.buttonContainer.buttonSearch.boxShadow};
  border-radius: ${albumItems.buttonContainer.buttonSearch.borderRadius};
  float: left;
  font-size: ${albumItems.buttonContainer.buttonSearch.fontSize};
  line-height: ${albumItems.buttonContainer.buttonSearch.lineHeight};
  margin: ${albumItems.buttonContainer.buttonSearch.margin};
  padding: ${albumItems.buttonContainer.buttonSearch.padding};
}
.album-item-button-imgSearch:hover {
  background: ${albumItems.buttonContainer.buttonSearch.hover.background};
  color: ${albumItems.buttonContainer.buttonSearch.hover.color};
}

.album-item-button-download {
  min-height: ${albumItems.buttonContainer.buttonImgDownload.size.minHeight};
  max-height: ${albumItems.buttonContainer.buttonImgDownload.size.maxHeight};
  background: ${albumItems.buttonContainer.buttonImgDownload.background};
  color: ${albumItems.buttonContainer.buttonImgDownload.color};
  border: ${albumItems.buttonContainer.buttonImgDownload.border};
  box-shadow: ${albumItems.buttonContainer.buttonImgDownload.boxShadow};
  border-radius: ${albumItems.buttonContainer.buttonImgDownload.borderRadius};
  float: left;
  font-size: ${albumItems.buttonContainer.buttonImgDownload.fontSize};
  line-height: ${albumItems.buttonContainer.buttonImgDownload.lineHeight};
  margin: ${albumItems.buttonContainer.buttonImgDownload.margin};
  padding: ${albumItems.buttonContainer.buttonImgDownload.padding};
}
.album-item-button-download:hover {
  background: ${albumItems.buttonContainer.buttonImgDownload.hover.background};
  color: ${albumItems.buttonContainer.buttonImgDownload.hover.color};
}

.album-item-button-turnOffZoom {
  min-height: ${albumItems.buttonContainer.buttonTurnOffZoom.size.minHeight};
  max-height: ${albumItems.buttonContainer.buttonTurnOffZoom.size.maxHeight};
  background: ${albumItems.buttonContainer.buttonTurnOffZoom.background};
  color: ${albumItems.buttonContainer.buttonTurnOffZoom.color};
  border: ${albumItems.buttonContainer.buttonTurnOffZoom.border};
  box-shadow: ${albumItems.buttonContainer.buttonTurnOffZoom.boxShadow};
  border-radius: ${albumItems.buttonContainer.buttonTurnOffZoom.borderRadius};
  float: left;
  font-size: ${albumItems.buttonContainer.buttonTurnOffZoom.fontSize};
  line-height: ${albumItems.buttonContainer.buttonTurnOffZoom.lineHeight};
  margin: ${albumItems.buttonContainer.buttonTurnOffZoom.margin};
  padding: ${albumItems.buttonContainer.buttonTurnOffZoom.padding};
}
.album-item-button-turnOffZoom:hover {
  background: ${albumItems.buttonContainer.buttonTurnOffZoom.hover.background};
}

.srcSearch {
  min-width: ${albumItems.searchMenu.size.minWidth};
  min-height: ${albumItems.searchMenu.size.minHeight};
  background: ${albumItems.searchMenu.background};
  position: fixed;
  display: grid;
  grid-template-columns: repeat(${albumItems.searchMenu.itemsInColumn}, auto);
  gap: ${albumItems.searchMenu.gap};
  align-content: center;
  justify-content: center;
  align-items: center;
  justify-items: center;
  padding: ${albumItems.searchMenu.padding};
  border-radius: ${albumItems.searchMenu.borderRadius};
  z-index: 1000;
}

.searchmenuItem {
  display: block;
  background: ${albumItems.searchMenu.items.background};
  color: ${albumItems.searchMenu.items.color};
  border-radius: ${albumItems.searchMenu.items.borderRadius};
  text-decoration: unset;
  border: ${albumItems.searchMenu.items.border};
  padding: ${albumItems.searchMenu.items.padding};
  width: -webkit-fill-available;
  text-align: center;
  font-size: ${albumItems.searchMenu.items.fontSize};
  line-height: ${albumItems.searchMenu.items.lineHeight};
}
.searchmenuItem:hover {
  background: ${albumItems.searchMenu.items.hover};
}

.albumPreview-field {
  width: 100%;
  height: 100%;
  position: absolute;
  left: 0;
  top: 0;
  overflow: hidden;
  -ms-touch-action: none;
  touch-action: none;
  -webkit-text-size-adjust: 100%;
  -webkit-backface-visibility: hidden;
  outline: none;
}

.albumPreview-field-imgCount {
  top: ${album.preview.imageCount.position.top};
  left: ${album.preview.imageCount.position.left};
  background: ${album.preview.imageCount.background};
  color: ${album.preview.imageCount.color};
  font-size: ${album.preview.imageCount.fontSize};
  font-weight: ${album.preview.imageCount.fontWeight};
  text-align: center;
  border: ${album.preview.imageCount.border};
  border-radius: ${album.preview.imageCount.borderRadius};
  width: ${album.preview.imageCount.size.width};
  padding: ${album.preview.imageCount.padding};
  margin: ${album.preview.imageCount.margin};
  display: block;
  z-index: 1000;
  position: fixed;
}

.albumPreview-field-imgZoom {
  top: ${album.preview.imageZoomLevel.position.top};
  left: ${album.preview.imageZoomLevel.position.left};
  background: ${album.preview.imageZoomLevel.background};
  color: ${album.preview.imageZoomLevel.color};
  font-size: ${album.preview.imageZoomLevel.fontSize};
  font-weight: ${album.preview.imageZoomLevel.fontWeight};
  text-align: center;
  border: ${album.preview.imageZoomLevel.border};
  border-radius: ${album.preview.imageZoomLevel.borderRadius};
  width: ${album.preview.imageZoomLevel.size.width};
  padding: ${album.preview.imageZoomLevel.padding};
  margin: ${album.preview.imageZoomLevel.margin};
  display: block;
  z-index: 1000;
  position: fixed;
}

.albumPreview-field-imgInfo {
  top: ${album.preview.imageInfo.position.top};
  left: ${album.preview.imageInfo.position.left};
  background: ${album.preview.imageInfo.background};
  color: ${album.preview.imageInfo.color};
  font-size: ${album.preview.imageInfo.fontSize};
  font-weight: ${album.preview.imageInfo.fontWeight};
  text-align: center;
  border: ${album.preview.imageInfo.border};
  border-radius: ${album.preview.imageInfo.borderRadius};
  width: ${album.preview.imageInfo.size.width};
  padding: ${album.preview.imageInfo.padding};
  margin: ${album.preview.imageInfo.margin};
  display: block;
  z-index: 1000;
  position: fixed;
}

.albumPreview-field-imgTitle {
  top: ${album.preview.imageTitle.position.top};
  left: ${album.preview.imageTitle.position.left};
  background: ${album.preview.imageTitle.background};
  color: ${album.preview.imageTitle.color};
  font-size: ${album.preview.imageTitle.fontSize};
  font-weight: ${album.preview.imageTitle.fontWeight};
  text-align: left;
  word-break: break-word;
  border: ${album.preview.imageTitle.border};
  border-radius: ${album.preview.imageTitle.borderRadius};
  width: ${album.preview.imageTitle.size.width};
  max-width: ${album.preview.imageTitle.size.maxWidth};
  max-height: ${album.preview.imageTitle.size.maxHeight};
  padding: ${album.preview.imageTitle.padding};
  margin: ${album.preview.imageTitle.margin};
  display: block;
  z-index: 1000;
  position: fixed;
  overflow: auto;
}

.albumPreview-field-imgLinksField {
  background: ${album.preview.imageLinksField.background};
  color: ${album.preview.imageLinksField.color};
  font-size: ${album.preview.imageLinksField.fontSize};
  font-weight: ${album.preview.imageLinksField.fontWeight};
  text-align: center;
  top: ${album.preview.imageLinksField.position.top};
  left: ${album.preview.imageLinksField.position.left};
  border: ${album.preview.imageLinksField.border};
  border-radius: ${album.preview.imageLinksField.borderRadius};
  width: ${album.preview.imageLinksField.size.width};
  height: ${album.preview.imageLinksField.size.height};
  padding: ${album.preview.imageLinksField.padding};
  margin: ${album.preview.imageLinksField.margin};
  display: block;
  z-index: 1000;
  position: fixed;
}

.albumPreview-field-imgLinksField-title {
  background: ${album.preview.imageLinksField.title.background};
  color: ${album.preview.imageLinksField.title.color};
  font-size: ${album.preview.imageLinksField.title.fontSize};
  font-weight: ${album.preview.imageLinksField.title.fontWeight};
  text-align: center;
  top: ${album.preview.imageLinksField.title.position.top};
  left: ${album.preview.imageLinksField.title.position.left};
  border: ${album.preview.imageLinksField.title.border};
  border-radius: ${album.preview.imageLinksField.title.borderRadius};
  width: ${album.preview.imageLinksField.title.size.width};
  max-height: ${album.preview.imageLinksField.title.size.maxHeight};
  padding: ${album.preview.imageLinksField.title.padding};
  margin: ${album.preview.imageLinksField.title.margin};
  display: block;
  position: relative;
}

.albumPreview-field-imgLinksField-list {
  background: ${album.preview.imageLinksField.list.background};
  color: ${album.preview.imageLinksField.list.color};
  font-size: ${album.preview.imageLinksField.list.fontSize};
  font-weight: ${album.preview.imageLinksField.list.fontWeight};
  text-align: center;
  word-break: break-word;
  top: ${album.preview.imageLinksField.list.position.top};
  left: ${album.preview.imageLinksField.list.position.left};
  border: ${album.preview.imageLinksField.list.border};
  border-radius: ${album.preview.imageLinksField.list.borderRadius};
  width: ${album.preview.imageLinksField.list.size.width};
  height: ${album.preview.imageLinksField.list.size.height};
  padding: ${album.preview.imageLinksField.list.padding};
  margin: ${album.preview.imageLinksField.list.margin};
  display: grid;
  justify-content: center;
  overflow: auto;
}
.albumPreview-field-imgLinksField-list a {
  display: block;
  width: max-content;
  height: max-content;
  color: ${album.preview.imageLinksField.list.items.color};
  font-size: ${album.preview.imageLinksField.list.items.fontSize};
  font-weight: ${album.preview.imageLinksField.list.items.fontWeight};
  margin: ${album.preview.imageLinksField.list.items.margin};
}
.albumPreview-field-imgLinksField-list a:hover {
  color: ${album.preview.imageLinksField.list.items.hover.color};
  cursor: ${album.preview.imageLinksField.list.items.hover.cursor};
}

.album-item.picked::-webkit-scrollbar {
  width: ${album.preview.scrollbar.sc.size.width};
  height: ${album.preview.scrollbar.sc.size.height};
  background: ${album.preview.scrollbar.sc.background};
}
.album-item.picked::-webkit-scrollbar-track {
  background: ${album.preview.scrollbar.track.background};
  border-radius: ${album.preview.scrollbar.track.borderRadius};
  margin: ${album.preview.scrollbar.track.margin};
}
.album-item.picked::-webkit-scrollbar-track-piece {
  background: ${album.preview.scrollbar.trackPiece.background};
  border: ${album.preview.scrollbar.trackPiece.border};
  border-radius: ${album.preview.scrollbar.trackPiece.borderRadius};
  width: ${album.preview.scrollbar.trackPiece.size.width};
  height: ${album.preview.scrollbar.trackPiece.size.height};
}
.album-item.picked::-webkit-scrollbar-thumb {
  background: ${album.preview.scrollbar.thumb.background};
  border: ${album.preview.scrollbar.thumb.border};
  border-radius: ${album.preview.scrollbar.thumb.borderRadius};
}
.album-item.picked::-webkit-scrollbar-thumb:hover {
  background: ${album.preview.scrollbar.thumb.hover.background};
}
.album-item.picked::-webkit-scrollbar-corner {
  background: ${album.preview.scrollbar.corner.background};
}

.albumPreview-nav-previous-button {
  width: ${album.preview.navigationButtons.previous.size.width};
  height: ${album.preview.navigationButtons.previous.size.height};
  position: fixed;
  border-radius: ${album.preview.navigationButtons.previous.borderRadius};
  top: ${album.preview.navigationButtons.previous.position.top};
  left: ${album.preview.navigationButtons.previous.position.left};
  background: ${album.preview.navigationButtons.previous.background};
  color: ${album.preview.navigationButtons.previous.color};
  font-size: ${album.preview.navigationButtons.previous.fontSize};
  border: ${album.preview.navigationButtons.previous.border};
  z-index: 2;
}
.albumPreview-nav-previous-button:hover {
  background: ${album.preview.navigationButtons.previous.hover.background};
  cursor: ${album.preview.navigationButtons.previous.hover.cursor};
}

.albumPreview-nav-next-button {
  width: ${album.preview.navigationButtons.next.size.width};
  height: ${album.preview.navigationButtons.next.size.height};
  position: fixed;
  border-radius: ${album.preview.navigationButtons.next.borderRadius};
  top: ${album.preview.navigationButtons.next.position.top};
  right: ${album.preview.navigationButtons.next.position.right};
  background: ${album.preview.navigationButtons.next.background};
  color: ${album.preview.navigationButtons.next.color};
  font-size: ${album.preview.navigationButtons.next.fontSize};
  border: ${album.preview.navigationButtons.next.border};
  z-index: 2;
}
.albumPreview-nav-next-button:hover {
  background: ${album.preview.navigationButtons.next.hover.background};
  cursor: ${album.preview.navigationButtons.next.hover.cursor};
}

.albumPreview-nav-close-button {
  width: ${album.preview.navigationButtons.close.size.width};
  height: ${album.preview.navigationButtons.close.size.height};
  position: fixed;
  border-radius: ${album.preview.navigationButtons.close.borderRadius};
  top: ${album.preview.navigationButtons.close.position.top};
  right: ${album.preview.navigationButtons.close.position.right};
  background: ${album.preview.navigationButtons.close.background};
  color: ${album.preview.navigationButtons.close.color};
  font-size: ${album.preview.navigationButtons.close.fontSize};
  line-height: ${album.preview.navigationButtons.close.lineHeight};
  border: ${album.preview.navigationButtons.close.border};
  z-index: 2;
}
.albumPreview-nav-close-button:hover {
  background: ${album.preview.navigationButtons.close.hover.background};
  cursor: ${album.preview.navigationButtons.close.hover.cursor};
}`
document.body.appendChild(css);

window.addEventListener('focus', getFocus, true);
function getFocus(e){
  if(e.target.classList){
    if(e.target.classList.value.match(/album-item$/)){
      focused = e.target;
      focused.classList.add('picked');
      if(!document.querySelector(`div[class='albumPreview-field']`)) {
        imagePreviewer = new AlbumPreview ({
            target: document.body
        })
        document.body.classList.add('blockScroll');
        e.target.parentNode.parentNode.classList.add('preview-opened');
      }
      // img.src = focused.querySelector(`img`).src;
      // img.style.maxWidth = '840px'
      // img.style.maxHeight = '810px'
      // img.style.zoom = 'unset'
      // console.log(focused.querySelector(`img`).src)
      layout.style.zIndex = '0';
      imagePreviewer.count.textContent = `${buttonsText.image.text}${Array.prototype.indexOf.call(focused.parentNode.children, focused) + 1}${buttonsText.image.spacer}${focused.parentNode.childElementCount}`;
      imagePreviewer.info.textContent = `${buttonsText.info.text}${focused.children[1].naturalWidth}${buttonsText.info.spacer}${focused.children[1].naturalHeight}${buttonsText.info.px}`;
      imagePreviewer.zoom.textContent = `${buttonsText.zoomLevel}${focused.children[1].style.zoom}`;
      imagePreviewer.title.textContent = `${buttonsText.title}${focused.children[1].getAttribute('imgTitle')||''}`;
      checkLinks(focused.children[1].getAttribute('imgLinks'), imagePreviewer.imgLinks);
    }
  }
}
window.addEventListener('keydown', keyDown, true);
function keyDown(e){
  if(e.code === mode.buttonPrev){
    if(focused){
      e.preventDefault();
      e.stopPropagation();
      e.stopImmediatePropagation();
      if(focused.previousElementSibling){
        if(focused.classList.value.match(/zoomed/)){
            focused.scrollTo(0, 0);
            focused.children[1].style.zoom = '100%';
            focused.classList.remove('zoomed');
        }
        imagePreviewer.zoom.textContent = `${buttonsText.zoomLevel}${focused.children[1].style.zoom}`;
        focused.classList.remove('picked');
        focused.previousElementSibling.focus();
      }else
      if(!focused.previousElementSibling){
        if(focused.classList.value.match(/zoomed/)){
            focused.scrollTo(0, 0);
            focused.children[1].style.zoom = '100%';
            focused.classList.remove('zoomed');
        }
        imagePreviewer.zoom.textContent = `${buttonsText.zoomLevel}${focused.children[1].style.zoom}`;
        focused.classList.remove('picked');
        focused.parentNode.children[focused.parentNode.children.length-1].focus();
      }
    }
  }else
  if(e.code === mode.buttonNext){
    if(focused){
      e.preventDefault();
      e.stopPropagation();
      e.stopImmediatePropagation();
      if(focused.nextElementSibling){
        if(focused.classList.value.match(/zoomed/)){
            focused.scrollTo(0, 0);
            focused.children[1].style.zoom = '100%';
            focused.classList.remove('zoomed');
        }
        imagePreviewer.zoom.textContent = `${buttonsText.zoomLevel}${focused.children[1].style.zoom}`;
        focused.classList.remove('picked');
        focused.nextElementSibling.focus();
      }else
      if(!focused.nextElementSibling){
        if(focused.classList.value.match(/zoomed/)){
            focused.scrollTo(0, 0);
            focused.children[1].style.zoom = '100%';
            focused.classList.remove('zoomed');
        }
        imagePreviewer.zoom.textContent = `${buttonsText.zoomLevel}${focused.children[1].style.zoom}`;
        focused.classList.remove('picked');
        focused.parentNode.children[0].focus();
      }
    }
  }else
  if(e.code === mode.buttonEsc){
    if(focused){
      e.preventDefault();
      e.stopPropagation();
      e.stopImmediatePropagation();
      layout.style.zIndex = '';
      // focused.blur();
      // focused = false;
      if(document.querySelector(`div[class='albumPreview-field']`)){
        document.querySelector(`div[class='albumPreview-field']`).remove();
        focused.classList.remove('picked');
        focused.parentNode.parentNode.classList.remove('preview-opened');
        document.body.classList.remove('blockScroll');
        if(focused.classList.value.match(/zoomed/)){
            focused.scrollTo(0, 0);
            focused.children[1].style.zoom = '100%';
            focused.classList.remove('zoomed');
        }
        focused.blur();
        focused = false;
      }
    }
  }else
  if(e.code === `${mode.button1}Left`||e.code === `${mode.button1}Right`){
    button1Pressed = true;
  }
}
window.addEventListener('keyup', keyUp, true);
function keyUp(e){
    if(e.code === `${mode.button1}Left`||e.code === `${mode.button1}Right`){
    button1Pressed = false;
  }
}

function checkItems(q){
    let albumsN = 0,
        artsN = 0;
    for(let i = 0, items = JSON.parse(q.textContent.trim()); i < items.length; i++){
        if(items[i].image.type === 'image'){
            artsN++;
        }
        if(i+1 === items.length){
            return artsN;
        }
    }
}

window.addEventListener('load', run, true);
window.addEventListener('beforeunload', run, true);
function run(){
  console.log('DTF-Album 2.0 is ok');
    if(mode.main.active && !mode.main.auto){
        if(document.querySelector(`.content.content--full figure[class='figure-gallery'] textarea[name='gallery-data-holder']`)){
            for(let i = 0, arr = document.querySelectorAll(`.content.content--full figure[class='figure-gallery'] textarea[name='gallery-data-holder']`); i < arr.length; i++){
                // arr[i].parentNode.parentNode.parentNode.insertBefore()
                // console.log(checkItems(arr[i]));
                if(checkItems(arr[i]) >= mode.main.howMany){
                    if(!arr[i].parentNode.parentNode.parentNode.previousElementSibling){
                        new ButtonCreateAlbum({
                            where: arr[i].parentNode.parentNode.parentNode,
                            target: arr[i].parentNode.parentNode.parentNode
                        });
                      // target.parentNode.parentNode.parentNode.parentNode.insertBefore(this.a, target.parentNode.parentNode.parentNode);
                    }else
                    if(arr[i].parentNode.parentNode.parentNode.previousElementSibling){
                        if(arr[i].parentNode.parentNode.parentNode.previousElementSibling.classList){
                            if(!arr[i].parentNode.parentNode.parentNode.previousElementSibling.classList.value.match(/dtf-album-button-create/)){
                                new ButtonCreateAlbum({
                                    where: arr[i].parentNode.parentNode.parentNode,
                                    target: arr[i].parentNode.parentNode.parentNode
                                });
                            }
                        }
                    }
                }
            }
        }
    }else
    if(mode.main.active && mode.main.auto){
        if(document.querySelector(`.content.content--full figure[class='figure-gallery'] textarea[name='gallery-data-holder']`)){
            for(let a = 0, albumArr = document.querySelectorAll(`.content.content--full figure[class='figure-gallery'] textarea[name='gallery-data-holder']`); a < albumArr.length; a++){
                if(checkItems(arr[i]) >= mode.main.howMany){
                    if(!albumArr[a].parentNode.parentNode.parentNode.previousElementSibling){
                        let al = albumArr[a].parentNode.parentNode.parentNode;
                        if(!al.style.display){
                            al.style.display = 'none';

                            console.log('Album is founded');
                            if(mode.main.button){
                              // console.log('Adding buttons', al);
                                new ButtonCreateAlbum ({
                                target: al,
                                where: al
                              });
                            }
                            let album = new Album({
                                where: al.nextElementSibling,
                                target: al
                            });
                            let artsN = 0;
                            for(let i = 0, arr = JSON.parse(al.querySelector(`textarea[name='gallery-data-holder']`).textContent.trim()); i <¬†arr.length; i++){
                                if(arr[i].image.type === 'image'){
                                    new AlbumItem({
                                        imgUrl: `https://leonardo.osnova.io/${arr[i].image.data.uuid}`,
                                        imgSize: arr[i].image.data.size,
                                        target: album.list
                                    })
                                  artsN++;
                                }
                                // console.log(i, arr.length)
                                if(i+1 === arr.length){
                                    album.info.textContent = artsN;
                                }
                            }
                        }
                    }else
                    if(albumArr[a].parentNode.parentNode.parentNode.previousElementSibling){
                        if(albumArr[a].parentNode.parentNode.parentNode.previousElementSibling.classList){
                            if(!albumArr[a].parentNode.parentNode.parentNode.previousElementSibling.classList.value.match(/dtf-album$/)){
                                let al = albumArr[a].parentNode.parentNode.parentNode;
                                // let album;
                                if(!al.style.display){
                                    al.style.display = 'none';
                                    console.log('Album is founded');
                                    if(mode.main.button){
                                      // console.log('Adding buttons2', al);
                                      new ButtonCreateAlbum ({
                                          target: al,
                                          where: al
                                      });
                                    }
                                    let album = new Album({
                                        where: al.nextElementSibling,
                                        target: al
                                    });
                                    let artsN = 0;
                                    for(let i = 0, arr = JSON.parse(al.querySelector(`textarea[name='gallery-data-holder']`).textContent.trim()); i <¬†arr.length; i++){
                                        if(arr[i].image.type === 'image'){
                                            new AlbumItem({
                                                imgUrl: `https://leonardo.osnova.io/${arr[i].image.data.uuid}`,
                                                imgSize: arr[i].image.data.size,
                                                target: album.list
                                            })
                                          artsN++;
                                        }
                                        // console.log(i, arr.length)
                                        if(i+1 === arr.length){
                                            album.info.textContent = artsN;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    if(mode.merge.active && !mode.main.auto){
        if(document.querySelector(`.content.content--full figure[class='figure-gallery'] textarea[name='gallery-data-holder']`)){
            if(!document.querySelector(`button[class='dtf-album-button-create-merge']`)){
            console.log('Creating merge button...');
                new CreateAlbumButtonMerged({
                    target: document.querySelector(`.content.content--full`)
                })
            }
        }
    }
    if(mode.compilation.active){
        if(document.querySelectorAll(`.content.content--full figure[class='figure-image'] .andropov_image`).length >= mode.compilation.howMany){
            if(!document.querySelector(`button[class='dtf-album-button-create-compilation']`)){
                console.log('Creating compilation button...');
                new CreateAlbumButtonCompilation({
                    target: document.querySelector(`.content.content--full`)
                })
            }
        }
    }
}
//
})();
